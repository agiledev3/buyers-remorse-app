{"version":3,"sources":["Components/PageSelection/Pages.js","Components/Home/BuyDialog.js","Components/Home/ListItem.js","Components/Home/ProductList.js","Components/Home/NewQuestionModal.js","Components/Home/useNewQuestionModal.js","Components/Home/ProductRemovedAlert.js","ProductNotifications.js","Components/Home/index.js","Components/EditProduct/useForm.js","Components/EditProduct/index.js","Components/PageSelection/PageSelection.js","Products/sources/LocalStorageSource.js","Products/index.js","Utils/DateService.js","Components/PwaPrompt/useAppInstallPrompt.js","Components/PwaPrompt/pwa.ico","Components/PwaPrompt/index.js","Components/StaticHeader/index.js","Components/ErrorAlert/index.js","App.js","reportWebVitals.js","index.js"],"names":["Pages","HOME","EDIT_PRODUCT","BuyDialog","props","canBuy","answersCount","Modal","show","onHide","handleDeclineClick","Body","Footer","Button","variant","onClick","handleConfirmClick","ListItem","useState","showBuyDialog","setShowBuyDialog","product","id","name","daysLeft","likeCount","questions","Object","values","length","Card","className","Title","Row","Col","xs","span","removeProduct","title","disabled","changePage","setCurrentProduct","openNewQuestionModal","Badge","ProductList","allProducts","map","NewQuestionModal","confirmAnswer","onSaveClick","productId","question","answer","onKeyDown","e","keyCode","preventDefault","Header","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","onAnswerChange","target","autoFocus","Text","muted","useNewQuestionModal","setShow","setQuestion","setAnswer","setProductId","closeNewQuestionModal","find","q","findQuestionNotAlreadyAnswered","handleAnswerChange","ProductRemovedAlert","Alert","showForgetAlert","showBoughtAlert","buildNotification","body","notification","Notification","onclick","ProductNotifications","products","onShow","this","_products","_onClick","_onShow","forEach","createdAt","lastNotification","reminderPeriod","nextRemiderDateThreshhold","moment","add","isAfter","window","permission","requestPermission","then","console","warn","showNotification","Home","useEffect","setStaticHeader","onBackButtonClick","updateProduct","Date","showExpiredReminders","increaseLikeCount","useForm","existingProduct","initProduct","linkToBuy","reasonToBuy","coolingPeriod","setValues","handleChange","event","handleReset","EditProduct","hasAnswers","keys","answers","resetAndGoHome","onSubmit","createProduct","htmlFor","data-testid","required","pattern","as","rows","i","style","border","borderRadius","background","color","InputGroup","Prepend","min","max","maxWidth","lg","aligned","size","PageSelection","selectedPage","setSelectedPage","currentProduct","LocalStorageSource","initialize","data","localStorage","setItem","read","getItem","JSON","parse","write","entity","source","filter","calculateNextId","push","stringify","entities","Math","element","Products","DataSource","DateService","_calculateDaysLeft","nowMs","dateService","getCurrent","getTime","diffDays","msInDay","ceil","dataSource","_readProductsFromSource","productChanges","getOne","updatedProduct","_writeProductToSource","undefined","toISOString","lastPromptedAt","useAppInstallPrompt","navigator","standalone","lastPrompt","daysSinceLastPrompt","isNaN","getUserShouldBePromptedToInstall","userShouldBePromptedToInstall","setUserShouldBePromptedToInstall","isMobile","PwaPrompt","appInstallPrompt","onPromptClick","borderTopRightRadius","borderTopLeftRadius","width","src","PwaIcon","alt","StaticHeader","fontSize","marginBottom","sm","ErrorAlert","error","setError","onClose","dismissible","Heading","heading","App","staticHeader","getProductsSafe","getAll","ex","setTimeout","message","setAllProducts","setShowForgetAlert","setShowBoughtAlert","Container","pages","create","bind","isForget","remove","update","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87af563b.chunk.js","sourcesContent":["// list of pages in the app.\n// Use to switch pages from another component by importing\nconst Pages = { HOME: \"Home\", EDIT_PRODUCT: \"EDIT_PRODUCT\" };\n\nexport default Pages;\n","import { Modal, Button } from \"react-bootstrap\";\n\nconst BuyDialog = (props) => {\n  const canBuy = props.answersCount >= 3;\n  return (\n    <Modal show={props.show} onHide={props.handleDeclineClick}>\n      <Modal.Body>\n        {canBuy\n          ? \"Are you sure you would like to buy this product?\"\n          : \"Please answer at least 3 awareness questions to unlock the buy button.\"}\n      </Modal.Body>\n      {canBuy ? (\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={props.handleDeclineClick}>\n            No\n          </Button>\n          <Button variant=\"danger\" onClick={props.handleConfirmClick}>\n            Yes\n          </Button>\n        </Modal.Footer>\n      ) : (\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={props.handleDeclineClick}>\n            Close\n          </Button>\n        </Modal.Footer>\n      )}\n    </Modal>\n  );\n};\n\nexport default BuyDialog;\n","import { Fragment, useState } from \"react\";\nimport { Card, Col, Row, Button, Badge } from \"react-bootstrap\";\nimport Pages from \"../PageSelection/Pages\";\nimport BuyDialog from \"./BuyDialog\";\n\nfunction ListItem(props) {\n  const [showBuyDialog, setShowBuyDialog] = useState(false);\n  const { id, name, daysLeft, likeCount, questions } = props.product;\n\n  const answersCount = questions ? Object.values(questions).length : 0;\n\n  const handleEditClick = () => {\n    props.changePage(Pages.EDIT_PRODUCT);\n    props.setCurrentProduct(props.product);\n  };\n\n  const canBuy = daysLeft === 0;\n\n  return (\n    <Fragment>\n      <Card className=\"p-3\" id={id} key={id}>\n        <Card.Title>{name}</Card.Title>\n        <Row>\n          <Col xs={{ span: 4 }}>\n            <Button\n              variant=\"btn btn-outline-success\"\n              className=\"px-4\"\n              onClick={() => props.removeProduct(props.product, true)}\n            >\n              <i className=\"far fa-thumbs-up\"></i> Forget\n            </Button>\n          </Col>\n          <Col xs={{ span: 8 }} className=\"text-right\">\n            <Button\n              variant=\"outline-danger\"\n              title=\"Buy product\"\n              className=\"px-3 mb-1 mx-1\"\n              onClick={() => setShowBuyDialog(true)}\n              disabled={!canBuy}\n            >\n              <i className=\"fas fa-shopping-cart\"></i>{\" \"}\n              {canBuy ? \"Buy\" : daysLeft + \" days to unlock\"}\n            </Button>\n            <Button\n              variant=\"outline-secondary\"\n              title=\"Edit product\"\n              onClick={handleEditClick}\n              className=\"mb-1\"\n            >\n              <i className=\"fas fa-pen\"></i>\n            </Button>\n            <Button\n              variant=\"success\"\n              onClick={() => props.openNewQuestionModal(props.product)}\n              className=\"px-2 mb-1 ml-1\"\n            >\n              <i className=\"fas fa-question-circle\"></i>\n              <sup>\n                <Badge variant=\"light\">{likeCount}</Badge>\n              </sup>\n            </Button>\n          </Col>\n        </Row>\n      </Card>\n      <BuyDialog\n        show={showBuyDialog}\n        handleConfirmClick={() => props.removeProduct(props.product, false)}\n        handleDeclineClick={() => setShowBuyDialog(false)}\n        answersCount={answersCount}\n      />\n    </Fragment>\n  );\n}\n\nexport default ListItem;\n","import React from \"react\";\nimport ListItem from \"./ListItem\";\nimport Pages from \"../PageSelection/Pages\";\nimport { Button } from \"react-bootstrap\";\n\nfunction ProductList(props) {\n  const handleAddClick = () => {\n    props.changePage(Pages.EDIT_PRODUCT);\n  };\n\n  return (\n    <div>\n      {props.allProducts.map((product) => (\n        <ListItem\n          key={product.id}\n          product={product}\n          changePage={props.changePage}\n          openNewQuestionModal={props.openNewQuestionModal}\n          removeProduct={props.removeProduct}\n          setCurrentProduct={props.setCurrentProduct}\n        />\n      ))}\n      <Button\n        variant=\"primary\"\n        className=\"float-right my-3\"\n        title=\"Add new product\"\n        onClick={handleAddClick}\n      >\n        <i className=\"fas fa-plus\"></i>\n      </Button>\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React from \"react\";\nimport { Modal, Form, Button } from \"react-bootstrap\";\n\nconst NewQuestionModal = (props) => {\n  const enterKeyCode = 13;\n\n  const confirmAnswer = () => {\n    props.onSaveClick({\n      productId: props.productId,\n      question: props.question,\n      answer: props.answer,\n    });\n  };\n\n  const handleKeyboardEvent = (e) => {\n    if (!!props.question && e.keyCode === enterKeyCode) {\n      e.preventDefault();\n      if (props.answer.length !== 0) {\n        confirmAnswer();\n      }\n    }\n  };\n\n  return (\n    <Modal\n      show={props.show}\n      onHide={props.onHide}\n      onKeyDown={handleKeyboardEvent}\n    >\n      <Modal.Header>\n        <Modal.Title>Increase product buying score</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        {!!props.question && (\n          <Form>\n            <Form.Group controlId=\"formQuestion\">\n              <Form.Label>{props.question}</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your answer...\"\n                value={props.answer}\n                onChange={(e) => props.onAnswerChange(e.target.value)}\n                autoFocus={true}\n              />\n              <Form.Text muted>\n                To increase the score of this product you must answer the\n                question above.\n              </Form.Text>\n            </Form.Group>\n          </Form>\n        )}\n        {!props.question && (\n          <p>\n            <strong>\n              Do you want to increase the buying score of this product?\n            </strong>\n          </p>\n        )}\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button variant=\"outline-secondary\" onClick={props.onHide}>\n          Cancel\n        </Button>\n        <Button\n          variant=\"primary\"\n          disabled={!!props.question && props.answer.length === 0}\n          onClick={confirmAnswer}\n        >\n          Confirm\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default NewQuestionModal;\n","import { useState } from \"react\";\n\nconst findQuestionNotAlreadyAnswered = (questions, product) => {\n  if (!product.questions) return questions[0];\n  return questions.find((q) => !product.questions[q]);\n};\n\nconst useNewQuestionModal = (questions) => {\n  const [show, setShow] = useState(false);\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [productId, setProductId] = useState(null);\n\n  const closeNewQuestionModal = () => {\n    setAnswer(\"\");\n    setShow(false);\n  };\n\n  const openNewQuestionModal = (product) => {\n    setQuestion(findQuestionNotAlreadyAnswered(questions, product));\n    setProductId(product.id);\n    setShow(true);\n  };\n\n  const handleAnswerChange = (answer) => {\n    setAnswer(answer);\n  };\n\n  return {\n    closeNewQuestionModal,\n    openNewQuestionModal,\n    handleAnswerChange,\n    question,\n    show,\n    answer,\n    productId,\n  };\n};\n\nexport default useNewQuestionModal;\n","import { Fragment } from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst ProductRemovedAlert = (props) => {\n  return (\n    <Fragment>\n      <Alert show={props.showForgetAlert} variant=\"success\" className=\"my-1\">\n        <p>\n          <i className=\"far fa-smile\"></i> The product has been removed from the\n          list. Good job!\n        </p>\n      </Alert>\n      <Alert show={props.showBoughtAlert} variant=\"danger\" className=\"my-1\">\n        <p>\n          <i className=\"far fa-frown\"></i> The product has been marked as bought\n          and removed from the list.\n        </p>\n      </Alert>\n    </Fragment>\n  );\n};\n\nexport default ProductRemovedAlert;\n","import moment from \"moment\";\n\nconst buildNotification = (title, body, onClick) => {\n  const notification = new Notification(title, { body });\n  notification.onclick = onClick;\n  return notification;\n};\n\nfunction showNotification(title, body, onClick) {\n  // Let's check if the browser supports notifications\n  if (!(\"Notification\" in window)) {\n    console.warn(\"This browser does not support desktop notification\");\n  }\n\n  // Let's check whether notification permissions have already been granted\n  else if (Notification.permission === \"granted\") {\n    // If it's okay let's create a notification\n    return buildNotification(title, body, onClick);\n  }\n\n  // Otherwise, we need to ask the user for permission\n  else if (Notification.permission !== \"denied\") {\n    Notification.requestPermission().then(function (permission) {\n      // If the user accepts, let's create a notification\n      if (permission === \"granted\") {\n        return buildNotification(title, body, onClick);\n      }\n    });\n  }\n}\n\nexport default class ProductNotifications {\n  constructor(products, onShow, onClick) {\n    this._products = products;\n    this._onClick = onClick;\n    this._onShow = onShow;\n  }\n\n  showExpiredReminders() {\n    this._products.forEach((product) => {\n      const { createdAt, lastNotification, reminderPeriod, name, id } = product;\n      const lastNotificationOrCreationDate = lastNotification\n        ? moment(lastNotification)\n        : moment(createdAt);\n      const nextRemiderDateThreshhold = lastNotificationOrCreationDate.add(\n        reminderPeriod,\n        \"days\"\n      );\n      const today = moment();\n      if (today.isAfter(nextRemiderDateThreshhold)) {\n        showNotification(\n          `Hey, a reminder about ${name}`,\n          `It passed more than ${reminderPeriod} days since you checked this product.`,\n          () => this._onClick(id)\n        );\n        this._onShow(id);\n      }\n    });\n  }\n}\n","import { useEffect, Fragment } from \"react\";\nimport ProductList from \"./ProductList\";\nimport NewQuestionModal from \"./NewQuestionModal.js\";\nimport useNewQuestionModal from \"./useNewQuestionModal.js\";\nimport ProductRemovedAlert from \"./ProductRemovedAlert\";\nimport questions from \"./questions.json\";\nimport Pages from \"../PageSelection/Pages.js\";\nimport ProductNotifications from \"../../ProductNotifications.js\";\n\nconst Home = (props) => {\n  const {\n    openNewQuestionModal,\n    closeNewQuestionModal,\n    handleAnswerChange,\n    show,\n    question,\n    answer,\n    productId,\n  } = useNewQuestionModal(questions);\n\n  const handleNewQuestionSave = ({ productId, question, answer }) => {\n    if (question && answer)\n      props.updateProduct(productId, { questions: { [question]: answer } });\n    props.increaseLikeCount(productId);\n    closeNewQuestionModal();\n  };\n\n  useEffect(() => {\n    props.setStaticHeader({\n      title: \"My wishlist\",\n      onBackButtonClick: null,\n    });\n    //eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    const productNotifications = new ProductNotifications(\n      props.allProducts,\n      (productId) =>\n        props.updateProduct(productId, { lastNotification: new Date() }),\n      (productId) => {\n        props.changePage(Pages.EDIT_PRODUCT);\n        props.setCurrentProduct(productId);\n      }\n    );\n    productNotifications.showExpiredReminders();\n  });\n\n  return (\n    <Fragment>\n      <ProductList\n        allProducts={props.allProducts}\n        changePage={props.changePage}\n        removeProduct={props.removeProduct}\n        setCurrentProduct={props.setCurrentProduct}\n        openNewQuestionModal={openNewQuestionModal}\n      />\n      <NewQuestionModal\n        productId={productId}\n        show={show}\n        question={question}\n        answer={answer}\n        onHide={closeNewQuestionModal}\n        onSaveClick={handleNewQuestionSave}\n        onAnswerChange={handleAnswerChange}\n      />\n      <ProductRemovedAlert\n        showForgetAlert={props.showForgetAlert}\n        showBoughtAlert={props.showBoughtAlert}\n      />\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import { useState } from \"react\";\n\nconst useForm = (existingProduct) => {\n  //use a passed product to edit; if none is passed - construct a default one to create\n  const initProduct = existingProduct\n    ? existingProduct\n    : {\n        name: \"\",\n        linkToBuy: \"\",\n        reasonToBuy: \"\",\n        reminderPeriod: 7,\n        coolingPeriod: 30,\n      };\n\n  const [product, setValues] = useState(initProduct);\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setValues({ ...product, [name]: value });\n  };\n  const handleReset = () => {\n    setValues({ ...initProduct });\n  };\n\n  return { handleChange, handleReset, product };\n};\n\nexport default useForm;\n","import { useEffect } from \"react\";\nimport useForm from \"./useForm\";\nimport Pages from \"../PageSelection/Pages\";\nimport { Col, Button, Form, InputGroup } from \"react-bootstrap\";\n\nconst EditProduct = (props) => {\n  const { handleChange, handleReset, product } = useForm(props.product);\n\n  const existingProduct = !!product.id;\n  const hasAnswers = !!product.questions;\n  const questions = hasAnswers ? Object.keys(product.questions) : [];\n  const answers = hasAnswers ? Object.values(product.questions) : [];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (existingProduct) {\n      props.updateProduct(product.id, product);\n    } else {\n      props.createProduct(product);\n    }\n    props.changePage(Pages.HOME);\n    props.setCurrentProduct(null);\n  };\n\n  const resetAndGoHome = () => {\n    handleReset();\n    props.changePage(Pages.HOME);\n    props.setCurrentProduct(null);\n  };\n\n  useEffect(() => {\n    props.setStaticHeader({\n      title: \"Product Details\",\n      onBackButtonClick: resetAndGoHome,\n    });\n    //eslint-disable-next-line\n  }, []);\n\n  return (\n    <Form className=\"product-form\" onSubmit={handleSubmit}>\n      <Form.Group>\n        <Form.Label htmlFor=\"name\">Product name:</Form.Label>\n        <Form.Control\n          onChange={handleChange}\n          value={product.name}\n          placeholder=\"Product name ...\"\n          name=\"name\"\n          id=\"name\"\n          data-testid=\"name\"\n          required\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"linkToBuy\">Link to buy:</Form.Label>\n        <Form.Control\n          onChange={handleChange}\n          value={product.linkToBuy}\n          placeholder=\"Link to a website ...\"\n          name=\"linkToBuy\"\n          id=\"linkToBuy\"\n          pattern=\"(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)\"\n          title=\"Should be a valid web address, e.g. www.example.com\"\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"reasonToBuy\">\n          Why would you like to buy this product?\n        </Form.Label>\n        <Form.Control\n          onChange={handleChange}\n          value={product.reasonToBuy}\n          placeholder=\"Reason to buy ...\"\n          name=\"reasonToBuy\"\n          id=\"reasonToBuy\"\n          as=\"textarea\"\n          rows=\"3\"\n          required\n          disabled={existingProduct}\n        />\n      </Form.Group>\n      {hasAnswers && (\n        <div className=\"my-2\">\n          {questions.map((q, i) => (\n            <div key={i} className=\"my-1\">\n              <p>{q}</p>\n              <p\n                className=\"p-2\"\n                style={{\n                  border: \"1px solid #ced4da\",\n                  borderRadius: \"0.25em\",\n                  background: \"#e9ecef\",\n                  color: \"#495057\",\n                }}\n              >\n                {answers[i]}\n              </p>\n            </div>\n          ))}\n        </div>\n      )}\n      <Form.Row>\n        <Form.Group as={Col} xs=\"auto\">\n          <Form.Label htmlFor=\"reminderPeriod\">\n            How long should I wait before I remind you about this product?\n          </Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text>Days</InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              onChange={handleChange}\n              value={product.reminderPeriod}\n              placeholder=\"Days ...\"\n              name=\"reminderPeriod\"\n              id=\"reminderPeriod\"\n              type=\"number\"\n              min=\"1\"\n              max=\"30\"\n              style={{ maxWidth: \"5rem\" }}\n            />\n          </InputGroup>\n        </Form.Group>\n        <Col lg=\"2\"></Col>\n        <Form.Group as={Col} xs=\"auto\">\n          <Form.Label htmlFor=\"coolingPeriod\">\n            How long should I lock the buy button?\n          </Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text>Days</InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              onChange={handleChange}\n              value={product.coolingPeriod}\n              placeholder=\"Days ...\"\n              name=\"coolingPeriod\"\n              id=\"coolingPeriod\"\n              type=\"number\"\n              min=\"1\"\n              max=\"90\"\n              style={{ maxWidth: \"5rem\" }}\n            />\n          </InputGroup>\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Col>\n          <Button\n            variant=\"outline-danger\"\n            aligned=\"left aligned\"\n            size=\"lg\"\n            onClick={resetAndGoHome}\n          >\n            <i className=\"fas fa-times-circle\"></i>\n          </Button>\n        </Col>\n        <Col xs=\"auto\">\n          <Button\n            variant=\"outline-success\"\n            aligned=\"right aligned\"\n            type=\"submit\"\n            size=\"lg\"\n            title=\"Save product\"\n          >\n            <i className=\"fas fa-check\"></i>\n          </Button>\n        </Col>\n      </Form.Row>\n    </Form>\n  );\n};\n\nexport default EditProduct;\n","import { useState, Fragment } from \"react\";\nimport Home from \"../Home\";\nimport EditProduct from \"../EditProduct\";\n//list of pages in the app\nimport Pages from \"./Pages\";\n\n// Component used to track the currently selected page and switch between pages.\n// To change to a new page from another component import 'Pages' as above and\n// pass setSelectedPage method down the tree to your component.\n// Call setSelectedPage(Pages.<new_page>) to change to the new_page page.\nconst PageSelection = (props) => {\n  const [selectedPage, setSelectedPage] = useState(Pages.HOME);\n\n  return (\n    <Fragment>\n      {selectedPage === Pages.HOME && (\n        <Home\n          allProducts={props.allProducts}\n          changePage={setSelectedPage}\n          setStaticHeader={props.setStaticHeader}\n          updateProduct={props.updateProduct}\n          removeProduct={props.removeProduct}\n          setCurrentProduct={props.setCurrentProduct}\n          increaseLikeCount={props.increaseLikeCount}\n          showForgetAlert={props.showForgetAlert}\n          showBoughtAlert={props.showBoughtAlert}\n        />\n      )}\n      {selectedPage === Pages.EDIT_PRODUCT && (\n        <EditProduct\n          product={props.currentProduct}\n          setCurrentProduct={props.setCurrentProduct}\n          changePage={setSelectedPage}\n          setStaticHeader={props.setStaticHeader}\n          createProduct={props.createProduct}\n          updateProduct={props.updateProduct}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default PageSelection;\n","const LocalStorageSource = {\n  initialize(name, data) {\n    localStorage.setItem(name, data);\n    return this;\n  },\n\n  read(name) {\n    var value = localStorage.getItem(name);\n    if (value) return JSON.parse(value);\n    return [];\n  },\n\n  write(name, entity, id) {\n    var source = this.read(name);\n\n    //try remove old version if exists\n    if (id) {\n      source = source.filter((e) => e.id !== id);\n    } else {\n      //set a unique id\n      entity.id = this.calculateNextId(source);\n    }\n    // handles remove if entity is null or undefined\n    if (entity) {\n      source.push(entity);\n    }\n\n    localStorage.setItem(name, JSON.stringify(source));\n  },\n\n  //emulates identity generation\n  calculateNextId(entities) {\n    if (!entities || entities.length === 0) return 1;\n    return Math.max(...entities.map((element) => element.id)) + 1;\n  },\n};\n\nexport default LocalStorageSource;\n","import TestSource from \"./sources/TestSource\";\nimport LocalStorageSource from \"./sources/LocalStorageSource\";\n\n// Product class is a repository that query and modify product entities.\nclass Products {\n  constructor(DataSource, DateService) {\n    this.dataSource = DataSource;\n    this.dateService = DateService;\n  }\n\n  // Returns all products\n  getAll() {\n    // Reads products from source\n    var products = this._readProductsFromSource();\n    //recalculates daysLeft property for each item\n    products.forEach((element) => {\n      element.daysLeft = this._calculateDaysLeft(\n        element.createdAt,\n        element.coolingPeriod\n      );\n    });\n    return products;\n  }\n\n  // Returns the product with the given id\n  getOne(id) {\n    return this._readProductsFromSource().find((product) => product.id === id);\n  }\n\n  // Updates the product with the given id\n  update(productId, productChanges) {\n    const product = this.getOne(productId);\n    // Overwrite the existing product data with the productChanges\n    const updatedProduct = {\n      ...product,\n      ...productChanges,\n      questions: { ...product.questions, ...productChanges.questions },\n    };\n    // Persist changes\n    this._writeProductToSource(productId, updatedProduct);\n  }\n\n  // Increases the like count of the product with the given id\n  increaseLikeCount(productId) {\n    const product = this.getOne(productId);\n    const updatedProduct = {\n      ...product,\n      likeCount: product.likeCount !== undefined ? product.likeCount + 1 : 0,\n    };\n    // Persist changes\n    this._writeProductToSource(productId, updatedProduct);\n  }\n\n  // Creates a new product\n  create(product) {\n    //initialize data for new product\n    product.likeCount = 0;\n    product.createdAt = new Date().toISOString();\n    product.daysLeft = product.coolingPeriod;\n\n    // Persist changes\n    this._writeProductToSource(null, product);\n  }\n\n  // Removes a product with the given id\n  remove(productId) {\n    this._writeProductToSource(productId, null);\n  }\n\n  // Private method to read the product data from source\n  _readProductsFromSource() {\n    return this.dataSource.read(\"products\");\n  }\n\n  // Private method to write product data\n  _writeProductToSource(id, product) {\n    const result = this.dataSource.write(\"products\", product, id);\n    return result;\n  }\n\n  // Calculates the daysLeft property - createdAt: string in ISO format\n  _calculateDaysLeft = (createdAt, coolingPeriod) => {\n    let nowMs = this.dateService.getCurrent().getTime();\n    let createdAtMs = Date.parse(createdAt);\n    let coolingDeadline =\n      createdAtMs + coolingPeriod * this.dateService.msInDay();\n    let diffDays = (coolingDeadline - nowMs) / this.dateService.msInDay();\n    //if difference is larger than 1 day i.e. cooling period hasn't lapsed yet - find value in days\n    return diffDays > 1 ? Math.ceil(diffDays) : 0;\n  };\n}\n\nexport { Products, LocalStorageSource, TestSource };\n","class DateService {\n  //get current date object\n  getCurrent() {\n    return new Date();\n  }\n\n  //miliseconds in a day\n  msInDay() {\n    return 86400000;\n  }\n}\n\nexport default DateService;\n","import { useState } from \"react\";\nimport { isMobile } from \"react-device-detect\";\n\nconst lastPromptedAt = \"appInstallLastPromptedAt\";\nconst daysToWaitBeforePrompt = 1;\n\nconst useAppInstallPrompt = () => {\n  const [\n    userShouldBePromptedToInstall,\n    setUserShouldBePromptedToInstall,\n  ] = useState(getUserShouldBePromptedToInstall());\n\n  const handleUserSeeingInstallPrompt = () => {\n    setUserShouldBePromptedToInstall(false);\n    localStorage.setItem(lastPromptedAt, new Date().toISOString());\n  };\n\n  return [\n    isMobile && userShouldBePromptedToInstall,\n    handleUserSeeingInstallPrompt,\n  ];\n};\n\nfunction getUserShouldBePromptedToInstall() {\n  //app installed\n  if (navigator.standalone) {\n    return false;\n  }\n  const lastPrompt = localStorage.getItem(lastPromptedAt);\n  //never prompted\n  if (!lastPrompt) {\n    return true;\n  }\n  const daysSinceLastPrompt = (new Date() - Date.parse(lastPrompt)) / 86400000;\n  return (\n    isNaN(daysSinceLastPrompt) || daysSinceLastPrompt > daysToWaitBeforePrompt\n  );\n}\n\nexport default useAppInstallPrompt;\n","export default __webpack_public_path__ + \"static/media/pwa.87f7645c.ico\";","import React from \"react\";\nimport { Button, Modal, Card } from \"react-bootstrap\";\nimport useAppInstallPrompt from \"./useAppInstallPrompt\";\nimport PwaIcon from \"./pwa.ico\";\n\nexport const PwaPrompt = () => {\n  const [appInstallPrompt, onPromptClick] = useAppInstallPrompt();\n\n  if (!appInstallPrompt) {\n    return null;\n  }\n  return (\n    <Modal show={true}>\n      <Modal.Header>\n        <img\n          className=\"mx-auto\"\n          style={{\n            borderTopRightRadius: \"50%\",\n            borderTopLeftRadius: \"50%\",\n          }}\n          width=\"40rem\"\n          src={PwaIcon}\n          alt=\"Icon\"\n        />\n      </Modal.Header>\n      <Modal.Body>\n        <Card.Text className=\"text-center\">\n          Open browser settings and tap &quot;Add to Home Screen&quot; to\n          install the app\n        </Card.Text>\n        <div className=\"d-flex justify-content-center\">\n          <Button onClick={onPromptClick}>Close</Button>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n","import React from \"react\";\nimport { Card, Col, Row, Button } from \"react-bootstrap\";\n\nfunction StaticHeader(props) {\n  const { title, onBackButtonClick } = props;\n  return (\n    <Card className=\"my-2\">\n      <Card.Title className=\"text-center\">\n        <Row className=\"p-1\">\n          <Col\n            xs={{ span: 2 }}\n            style={{ fontSize: \"2em\", marginBottom: \"-1em\" }}\n            onClick={onBackButtonClick ? () => onBackButtonClick() : () => {}}\n          >\n            {onBackButtonClick && (\n              <Button variant=\"outline-dark\" size=\"lg\">\n                <i className=\"fas fa-chevron-left align-center\"></i>\n              </Button>\n            )}\n          </Col>\n          <Col xs={{ span: 8 }}>Felicity</Col>\n          <Col xs={{ span: 2 }} style={{ fontSize: \"2em\" }}></Col>\n        </Row>\n        <Row>\n          <Col sm={{ span: 2 }}></Col>\n          <Col sm={{ span: 8 }}>{title}</Col>\n          <Col sm={{ span: 2 }}></Col>\n        </Row>\n      </Card.Title>\n    </Card>\n  );\n}\n\nexport default StaticHeader;\n","import { Fragment } from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst ErrorAlert = (props) => {\n  const { error, setError } = props;\n  return (\n    <Fragment>\n      {error && (\n        <Alert\n          show={!!error}\n          variant=\"danger\"\n          className=\"my-1\"\n          onClose={() => setError(null)}\n          dismissible\n        >\n          <Alert.Heading>{error.heading}</Alert.Heading>\n          <p>{error.body}</p>\n        </Alert>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ErrorAlert;\n","import { useState } from \"react\";\n\nimport PageSelection from \"./Components/PageSelection/PageSelection.js\";\nimport { Products, LocalStorageSource, TestSource } from \"./Products\";\nimport DateService from \"./Utils/DateService\";\nimport { PwaPrompt } from \"./Components/PwaPrompt\";\nimport StaticHeader from \"./Components/StaticHeader\";\nimport ErrorAlert from \"./Components/ErrorAlert\";\n\nimport { Container } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst products =\n  process.env.NODE_ENV !== \"test\"\n    ? new Products(LocalStorageSource, new DateService())\n    : new Products(TestSource.initialize(), new DateService());\n\nfunction App() {\n  const [staticHeader, setStaticHeader] = useState({\n    title: \"Loading...\",\n    onBackButtonClick: null,\n  });\n  const [error, setError] = useState(null);\n  const getProductsSafe = () => {\n    try {\n      return products.getAll();\n    } catch (ex) {\n      if (!error) {\n        setTimeout(() => {\n          setError({\n            heading: \"Error loading products\",\n            body: ex.message,\n          });\n        }, 500);\n      }\n    }\n    return [];\n  };\n  const [allProducts, setAllProducts] = useState(getProductsSafe());\n  const [currentProduct, setCurrentProduct] = useState(null);\n  const [showForgetAlert, setShowForgetAlert] = useState(false);\n  const [showBoughtAlert, setShowBoughtAlert] = useState(false);\n\n  const createProduct = (product) => {\n    try {\n      products.create.bind(products)(product);\n    } catch (ex) {\n      if (!error) {\n        setTimeout(() => {\n          setError({\n            heading: \"Error adding new products\",\n            body: ex.message,\n          });\n        }, 500);\n      }\n    }\n    setAllProducts(getProductsSafe());\n  };\n  const updateProduct = (productId, product) => {\n    try {\n      products.update.bind(products)(productId, product);\n    } catch (ex) {\n      if (!error) {\n        setTimeout(() => {\n          setError({\n            heading: \"Error updating product\",\n            body: ex.message,\n          });\n        }, 500);\n      }\n    }\n    setAllProducts(getProductsSafe());\n  };\n  const removeProduct = (product, isForget) => {\n    try {\n      products.remove.bind(products)(product.id);\n    } catch (ex) {\n      if (!error) {\n        setTimeout(() => {\n          setError({\n            heading: \"Error removing product\",\n            body: ex.message,\n          });\n        }, 500);\n      }\n    }\n    setAllProducts(getProductsSafe());\n\n    if (isForget) {\n      setShowForgetAlert(true);\n    } else {\n      setShowBoughtAlert(true);\n    }\n\n    setTimeout(() => {\n      setShowForgetAlert(false);\n      setShowBoughtAlert(false);\n    }, 2000);\n  };\n  const increaseLikeCount = (productId) => {\n    products.increaseLikeCount.bind(products)(productId);\n    setAllProducts(getProductsSafe());\n  };\n\n  return (\n    <Container>\n      <PwaPrompt />\n      <StaticHeader\n        title={staticHeader.title}\n        onBackButtonClick={staticHeader.onBackButtonClick}\n      />\n      <PageSelection\n        pages={App.pages}\n        allProducts={allProducts}\n        createProduct={createProduct}\n        removeProduct={removeProduct}\n        updateProduct={updateProduct}\n        increaseLikeCount={increaseLikeCount}\n        setCurrentProduct={setCurrentProduct}\n        currentProduct={currentProduct}\n        setStaticHeader={setStaticHeader}\n        showForgetAlert={showForgetAlert}\n        showBoughtAlert={showBoughtAlert}\n      />\n      <ErrorAlert error={error} setError={setError} />\n    </Container>\n  );\n}\n\nApp.pages = { HOME: \"HOME\", EDIT_PRODUCT: \"EDIT_PRODUCT\" };\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}