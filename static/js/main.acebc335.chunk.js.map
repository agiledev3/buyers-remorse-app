{"version":3,"sources":["Components/PageSelection/Pages.js","Components/Home/ListItem.js","Components/Home/ProductList.js","Components/Home/NewQuestionModal.js","Components/Home/useNewQuestionModal.js","Components/Home/index.js","Components/EditProduct/useForm.js","Components/EditProduct/index.js","Components/PageSelection/PageSelection.js","Products/sources/LocalStorageSource.js","Products/index.js","Utils/DateService.js","Components/PwaPrompt/useAppInstallPrompt.js","Components/PwaPrompt/pwa.ico","Components/PwaPrompt/index.js","App.js","reportWebVitals.js","index.js"],"names":["Pages","HOME","EDIT_PRODUCT","ListItem","props","product","id","name","daysLeft","likeCount","Card","className","Title","Row","Col","Button","variant","onClick","removeProduct","title","changePage","setCurrentProduct","openNewQuestionModal","style","paddingLeft","paddingRight","marginLeft","Badge","ProductList","sm","span","fontSize","allProducts","map","NewQuestionModal","Modal","show","onHide","Header","Body","question","Form","Group","controlId","Label","Control","type","placeholder","value","answer","onChange","e","onAnswerChange","target","Text","muted","Footer","disabled","length","onSaveClick","productId","useNewQuestionModal","questions","useState","setShow","setQuestion","setAnswer","setProductId","closeNewQuestionModal","find","q","findQuestionNotAlreadyAnswered","handleAnswerChange","Home","Fragment","updateProduct","increaseLikeCount","useForm","existingProduct","initProduct","linkToBuy","reasonToBuy","reminderPeriod","coolingPeriod","setValues","handleChange","event","handleReset","EditProduct","resetAndGoHome","xs","size","onSubmit","preventDefault","createProduct","htmlFor","data-testid","required","as","rows","min","max","maxWidth","lg","aligned","PageSelection","selectedPage","setSelectedPage","currentProduct","LocalStorageSource","read","localStorage","getItem","JSON","parse","write","entity","source","this","filter","calculateNextId","push","setItem","stringify","entities","Math","element","Products","DataSource","DateService","_calculateDaysLeft","createdAt","nowMs","dateService","getCurrent","getTime","diffDays","Date","msInDay","floor","dataSource","products","_readProductsFromSource","forEach","productChanges","getOne","updatedProduct","_writeProductToSource","undefined","toISOString","lastPromptedAt","useAppInstallPrompt","navigator","standalone","lastPrompt","daysSinceLastPrompt","isNaN","getUserShouldBePromptedToInstall","userShouldBePromptedToInstall","setUserShouldBePromptedToInstall","isMobile","PwaPrompt","appInstallPrompt","onPromptClick","borderTopRightRadius","borderTopLeftRadius","width","src","PwaIcon","alt","App","getAll","setAllProducts","showForgetAlert","setShowForgetAlert","Container","pages","create","bind","remove","setTimeout","update","Alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acebc335.chunk.js","sourcesContent":["// list of pages in the app.\n// Use to switch pages from another component by importing\nconst Pages = { HOME: \"Home\", EDIT_PRODUCT: \"EDIT_PRODUCT\" };\n\nexport default Pages;\n","import React from \"react\";\nimport { Card, Col, Row, Button, Badge } from \"react-bootstrap\";\nimport Pages from \"../PageSelection/Pages\";\n\nfunction ListItem(props) {\n  const { id, name, daysLeft, likeCount } = props.product;\n\n  const handleEditClick = () => {\n    props.changePage(Pages.EDIT_PRODUCT);\n    props.setCurrentProduct(props.product);\n  };\n\n  return (\n    <Card className=\"p-3\" id={id} key={id}>\n      <Card.Title>{name}</Card.Title>\n      <Row>\n        <Col>\n          {daysLeft === 0 ? (\n            <Button\n              variant=\"btn btn-outline-success\"\n              className=\"px-3\"\n              onClick={() => props.removeProduct(props.product)}\n            >\n              <i className=\"fas fa-minus-circle\"></i> Forget\n            </Button>\n          ) : (\n            <span>\n              <i className=\"far fa-clock\"></i> {daysLeft} days left\n            </span>\n          )}\n        </Col>\n        <Col className=\"text-right\">\n          <Button\n            variant=\"outline-secondary\"\n            title=\"Edit product\"\n            onClick={handleEditClick}\n          >\n            <i className=\"fas fa-pen\"></i>\n          </Button>\n          <Button\n            variant=\"success\"\n            onClick={() => props.openNewQuestionModal(props.product)}\n            style={{\n              paddingLeft: \"0.55em\",\n              paddingRight: \"0.2em\",\n              marginLeft: \"0.3em\",\n            }}\n          >\n            <i className=\"fas fa-thumbs-up\"></i>\n            <sup>\n              <Badge variant=\"light\">{likeCount}</Badge>\n            </sup>\n          </Button>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default ListItem;\n","import React from \"react\";\nimport ListItem from \"./ListItem\";\nimport Pages from \"../PageSelection/Pages\";\nimport { Card, Col, Row, Button } from \"react-bootstrap\";\n\nfunction ProductList(props) {\n  const handleAddClick = () => {\n    props.changePage(Pages.EDIT_PRODUCT);\n  };\n\n  return (\n    <div>\n      <Card className=\"p-2\">\n        <Card.Title className=\"text-center\">\n          <Row>\n            <Col sm={{ span: 2 }}></Col>\n            <Col sm={{ span: 8 }}>Buyer's regret</Col>\n            <Col sm={{ span: 2 }} style={{ fontSize: \"2em\" }}>\n              <i className=\"far fa-user-circle align-middle\"></i>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={{ span: 2 }}></Col>\n            <Col sm={{ span: 8 }}>My wishlist</Col>\n            <Col sm={{ span: 2 }}></Col>\n          </Row>\n        </Card.Title>\n      </Card>\n      {props.allProducts.map((product) => (\n        <ListItem\n          key={product.id}\n          product={product}\n          changePage={props.changePage}\n          openNewQuestionModal={props.openNewQuestionModal}\n          removeProduct={props.removeProduct}\n          setCurrentProduct={props.setCurrentProduct}\n        />\n      ))}\n      <Button\n        variant=\"primary\"\n        className=\"float-right my-3\"\n        title=\"Add new product\"\n        onClick={handleAddClick}\n      >\n        <i className=\"fas fa-plus\"></i>\n      </Button>\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React from \"react\";\nimport { Modal, Form, Button } from \"react-bootstrap\";\n\nconst NewQuestionModal = (props) => {\n  return (\n    <Modal show={props.show} onHide={props.onHide}>\n      <Modal.Header>\n        <Modal.Title>Increase product buying score</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        {!!props.question && (\n          <Form>\n            <Form.Group controlId=\"formQuestion\">\n              <Form.Label>{props.question}</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your answer...\"\n                value={props.answer}\n                onChange={(e) => props.onAnswerChange(e.target.value)}\n              />\n              <Form.Text muted>\n                To increase the score of this product you must answer the\n                question above.\n              </Form.Text>\n            </Form.Group>\n          </Form>\n        )}\n        {!props.question && (\n          <p>\n            <strong>\n              Do you want to increase the buying score of this product?\n            </strong>\n          </p>\n        )}\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button variant=\"outline-secondary\" onClick={props.onHide}>\n          Cancel\n        </Button>\n        <Button\n          variant=\"primary\"\n          disabled={!!props.question && props.answer.length === 0}\n          onClick={() =>\n            props.onSaveClick({\n              productId: props.productId,\n              question: props.question,\n              answer: props.answer,\n            })\n          }\n        >\n          Confirm\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default NewQuestionModal;\n","import { useState } from \"react\";\n\nconst findQuestionNotAlreadyAnswered = (questions, product) => {\n  if (!product.questions) return questions[0];\n  return questions.find((q) => !product.questions[q]);\n};\n\nconst useNewQuestionModal = (questions) => {\n  const [show, setShow] = useState(false);\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [productId, setProductId] = useState(null);\n\n  const closeNewQuestionModal = () => {\n    setAnswer(\"\");\n    setShow(false);\n  };\n\n  const openNewQuestionModal = (product) => {\n    setQuestion(findQuestionNotAlreadyAnswered(questions, product));\n    setProductId(product.id);\n    setShow(true);\n  };\n\n  const handleAnswerChange = (answer) => {\n    setAnswer(answer);\n  };\n\n  return {\n    closeNewQuestionModal,\n    openNewQuestionModal,\n    handleAnswerChange,\n    question,\n    show,\n    answer,\n    productId,\n  };\n};\n\nexport default useNewQuestionModal;\n","import React from \"react\";\nimport ProductList from \"./ProductList\";\nimport NewQuestionModal from \"./NewQuestionModal.js\";\nimport useNewQuestionModal from \"./useNewQuestionModal.js\";\nimport questions from \"./questions.json\";\n\nconst Home = (props) => {\n  const {\n    openNewQuestionModal,\n    closeNewQuestionModal,\n    handleAnswerChange,\n    show,\n    question,\n    answer,\n    productId,\n  } = useNewQuestionModal(questions);\n\n  const handleNewQuestionSave = ({ productId, question, answer }) => {\n    if (question && answer)\n      props.updateProduct(productId, { questions: { [question]: answer } });\n    props.increaseLikeCount(productId);\n    closeNewQuestionModal();\n  };\n\n  return (\n    <React.Fragment>\n      <ProductList\n        allProducts={props.allProducts}\n        changePage={props.changePage}\n        removeProduct={props.removeProduct}\n        setCurrentProduct={props.setCurrentProduct}\n        openNewQuestionModal={openNewQuestionModal}\n      />\n      <NewQuestionModal\n        productId={productId}\n        show={show}\n        question={question}\n        answer={answer}\n        onHide={closeNewQuestionModal}\n        onSaveClick={handleNewQuestionSave}\n        onAnswerChange={handleAnswerChange}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import { useState } from \"react\";\n\nconst useForm = (existingProduct) => {\n  //use a passed product to edit; if none is passed - construct a default one to create\n  const initProduct = existingProduct\n    ? existingProduct\n    : {\n        name: \"\",\n        linkToBuy: \"\",\n        reasonToBuy: \"\",\n        reminderPeriod: 7,\n        coolingPeriod: 30,\n      };\n\n  const [product, setValues] = useState(initProduct);\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setValues({ ...product, [name]: value });\n  };\n  const handleReset = () => {\n    setValues({ ...initProduct });\n  };\n\n  return { handleChange, handleReset, product };\n};\n\nexport default useForm;\n","import React from \"react\";\nimport useForm from \"./useForm\";\nimport Pages from \"../PageSelection/Pages\";\nimport { Col, Row, Card, Button, Form } from \"react-bootstrap\";\n\nconst EditProduct = (props) => {\n  const { handleChange, handleReset, product } = useForm(props.product);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (product.id) {\n      props.updateProduct(product.id, product);\n    } else {\n      props.createProduct(product);\n    }\n    props.changePage(Pages.HOME);\n    props.setCurrentProduct(null);\n  };\n\n  const resetAndGoHome = () => {\n    handleReset();\n    props.changePage(Pages.HOME);\n    props.setCurrentProduct(null);\n  };\n\n  return (\n    <React.Fragment>\n      <Card className=\"my-2\">\n        <Card.Title className=\"text-center\">\n          <Row className=\"p-1\">\n            <Col xs={{ span: 2 }} style={{ fontSize: \"2em\" }}>\n              <Button variant=\"outline-dark\" size=\"lg\" onClick={resetAndGoHome}>\n                <i className=\"fas fa-chevron-left align-center\"></i>\n              </Button>\n            </Col>\n            <Col xs={{ span: 8 }}>Buyer's regret</Col>\n            <Col xs={{ span: 2 }} style={{ fontSize: \"2em\" }}>\n              <i className=\"far fa-user-circle align-middle\"></i>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={{ span: 2 }}></Col>\n            <Col sm={{ span: 8 }}>Product Details</Col>\n            <Col sm={{ span: 2 }}></Col>\n          </Row>\n        </Card.Title>\n      </Card>\n      <Form className=\"product-form\" onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Label htmlFor=\"name\">Product name:</Form.Label>\n          <Form.Control\n            onChange={handleChange}\n            value={product.name}\n            placeholder=\"Product name ...\"\n            name=\"name\"\n            id=\"name\"\n            data-testid=\"name\"\n            required\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label htmlFor=\"linkToBuy\">Link to buy:</Form.Label>\n          <Form.Control\n            onChange={handleChange}\n            value={product.linkToBuy}\n            placeholder=\"Link to a website ...\"\n            name=\"linkToBuy\"\n            id=\"linkToBuy\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label htmlFor=\"reasonToBuy\">\n            Why would you like to buy this product?\n          </Form.Label>\n          <Form.Control\n            onChange={handleChange}\n            value={product.reasonToBuy}\n            placeholder=\"Reason to buy ...\"\n            name=\"reasonToBuy\"\n            id=\"reasonToBuy\"\n            as=\"textarea\"\n            rows=\"3\"\n            required\n          />\n        </Form.Group>\n        <Form.Row>\n          <Form.Group as={Col} xs=\"auto\">\n            <Form.Label htmlFor=\"reminderPeriod\">\n              How long should I wait before I remind you about this product?\n            </Form.Label>\n            <Form.Control\n              onChange={handleChange}\n              value={product.reminderPeriod}\n              placeholder=\"Days ...\"\n              name=\"reminderPeriod\"\n              id=\"reminderPeriod\"\n              type=\"number\"\n              min=\"1\"\n              max=\"30\"\n              style={{ maxWidth: \"5rem\" }}\n            />\n          </Form.Group>\n          <Col lg=\"2\"></Col>\n          <Form.Group as={Col} xs=\"auto\">\n            <Form.Label htmlFor=\"coolingPeriod\">\n              How long should I lock the buy button?\n            </Form.Label>\n            <Form.Control\n              onChange={handleChange}\n              value={product.coolingPeriod}\n              placeholder=\"Days ...\"\n              name=\"coolingPeriod\"\n              id=\"coolingPeriod\"\n              type=\"number\"\n              min=\"1\"\n              max=\"90\"\n              style={{ maxWidth: \"5rem\" }}\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Col>\n            <Button\n              variant=\"outline-danger\"\n              aligned=\"left aligned\"\n              size=\"lg\"\n              onClick={resetAndGoHome}\n            >\n              <i className=\"fas fa-times-circle\"></i>\n            </Button>\n          </Col>\n          <Col xs=\"auto\">\n            <Button\n              variant=\"outline-success\"\n              aligned=\"right aligned\"\n              type=\"submit\"\n              size=\"lg\"\n              title=\"Save product\"\n            >\n              <i className=\"fas fa-check\"></i>\n            </Button>\n          </Col>\n        </Form.Row>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default EditProduct;\n","import { useState } from \"react\";\nimport { Fragment } from \"react\";\nimport Home from \"../Home\";\nimport EditProduct from \"../EditProduct\";\n//list of pages in the app\nimport Pages from \"./Pages\";\n\n// Component used to track the currently selected page and switch between pages.\n// To change to a new page from another component import 'Pages' as above and\n// pass setSelectedPage method down the tree to your component.\n// Call setSelectedPage(Pages.<new_page>) to change to the new_page page.\nconst PageSelection = (props) => {\n  const [selectedPage, setSelectedPage] = useState(Pages.HOME);\n\n  return (\n    <Fragment>\n      {selectedPage === Pages.HOME && (\n        <Home\n          allProducts={props.allProducts}\n          changePage={setSelectedPage}\n          updateProduct={props.updateProduct}\n          removeProduct={props.removeProduct}\n          setCurrentProduct={props.setCurrentProduct}\n          increaseLikeCount={props.increaseLikeCount}\n        />\n      )}\n      {selectedPage === Pages.EDIT_PRODUCT && (\n        <EditProduct\n          product={props.currentProduct}\n          setCurrentProduct={props.setCurrentProduct}\n          changePage={setSelectedPage}\n          createProduct={props.createProduct}\n          updateProduct={props.updateProduct}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default PageSelection;\n","const LocalStorageSource = {\n  read(name) {\n    var value = localStorage.getItem(name);\n    if (value) return JSON.parse(value);\n    return [];\n  },\n\n  write(name, entity, id) {\n    var source = this.read(name);\n\n    //try remove old version if exists\n    if (id) {\n      source = source.filter((e) => e.id !== id);\n    } else {\n      //set a unique id\n      entity.id = this.calculateNextId(source);\n    }\n    // handles remove if entity is null or undefined\n    if (entity) {\n      source.push(entity);\n    }\n\n    localStorage.setItem(name, JSON.stringify(source));\n  },\n\n  //emulates identity generation\n  calculateNextId(entities) {\n    if (!entities || entities.length === 0) return 1;\n    return Math.max(...entities.map((element) => element.id)) + 1;\n  },\n};\n\nexport default LocalStorageSource;\n","import TestSource from \"./sources/TestSource\";\nimport LocalStorageSource from \"./sources/LocalStorageSource\";\n\nclass Products {\n  constructor(DataSource, DateService) {\n    this.dataSource = DataSource;\n    this.dateService = DateService;\n  }\n\n  getAll() {\n    var products = this._readProductsFromSource();\n    //recalculates daysLeft property for each item\n    products.forEach((element) => {\n      element.daysLeft = this._calculateDaysLeft(\n        element.createdAt,\n        element.coolingPeriod\n      );\n    });\n    return products;\n  }\n\n  getOne(id) {\n    return this._readProductsFromSource().find((product) => product.id === id);\n  }\n\n  update(productId, productChanges) {\n    const product = this.getOne(productId);\n    const updatedProduct = {\n      ...product,\n      ...productChanges,\n      questions: { ...product.questions, ...productChanges.questions },\n    };\n    this._writeProductToSource(productId, updatedProduct);\n  }\n\n  increaseLikeCount(productId) {\n    const product = this.getOne(productId);\n    const updatedProduct = {\n      ...product,\n      likeCount: product.likeCount !== undefined ? product.likeCount + 1 : 0,\n    };\n    this._writeProductToSource(productId, updatedProduct);\n  }\n\n  create(product) {\n    //init data for new product\n    product.likeCount = 0;\n    product.createdAt = new Date().toISOString();\n    product.daysLeft = product.coolingPeriod;\n\n    this._writeProductToSource(null, product);\n  }\n\n  remove(productId) {\n    this._writeProductToSource(productId, null);\n  }\n\n  _readProductsFromSource() {\n    return this.dataSource.read(\"products\");\n  }\n\n  _writeProductToSource(id, product) {\n    const result = this.dataSource.write(\"products\", product, id);\n    return result;\n  }\n\n  //createdAt: string in ISO format\n  _calculateDaysLeft = (createdAt, coolingPeriod) => {\n    let nowMs = this.dateService.getCurrent().getTime();\n    let createdAtMs = Date.parse(createdAt);\n    let coolingDeadline =\n      createdAtMs + coolingPeriod * this.dateService.msInDay();\n    let diffDays = (coolingDeadline - nowMs) / this.dateService.msInDay();\n    //if difference is larger than 1 day i.e. cooling period hasn't lapsed yet - find value in days\n    return diffDays > 1 ? Math.floor(diffDays) : 0;\n  };\n}\n\nexport { Products, LocalStorageSource, TestSource };\n","class DateService {\n  //get current date object\n  getCurrent() {\n    return new Date();\n  }\n\n  //miliseconds in a day\n  msInDay() {\n    return 86400000;\n  }\n}\n\nexport default DateService;\n","import { useState } from \"react\";\nimport { isMobile } from \"react-device-detect\";\n\nconst lastPromptedAt = \"appInstallLastPromptedAt\";\nconst daysToWaitBeforePrompt = 1;\n\nconst useAppInstallPrompt = () => {\n  const [\n    userShouldBePromptedToInstall,\n    setUserShouldBePromptedToInstall,\n  ] = useState(getUserShouldBePromptedToInstall());\n\n  const handleUserSeeingInstallPrompt = () => {\n    setUserShouldBePromptedToInstall(false);\n    localStorage.setItem(lastPromptedAt, new Date().toISOString());\n  };\n\n  return [\n    isMobile && userShouldBePromptedToInstall,\n    handleUserSeeingInstallPrompt,\n  ];\n};\n\nfunction getUserShouldBePromptedToInstall() {\n  //app installed\n  if (navigator.standalone) {\n    return false;\n  }\n  const lastPrompt = localStorage.getItem(lastPromptedAt);\n  //never prompted\n  if (!lastPrompt) {\n    return true;\n  }\n  const daysSinceLastPrompt = (new Date() - Date.parse(lastPrompt)) / 86400000;\n  return (\n    isNaN(daysSinceLastPrompt) || daysSinceLastPrompt > daysToWaitBeforePrompt\n  );\n}\n\nexport default useAppInstallPrompt;\n","export default __webpack_public_path__ + \"static/media/pwa.87f7645c.ico\";","import React from \"react\";\nimport { Button, Modal, Card } from \"react-bootstrap\";\nimport useAppInstallPrompt from \"./useAppInstallPrompt\";\nimport PwaIcon from \"./pwa.ico\";\n\nexport const PwaPrompt = () => {\n  const [appInstallPrompt, onPromptClick] = useAppInstallPrompt();\n\n  if (!appInstallPrompt) {\n    return null;\n  }\n  return (\n    <Modal show={true}>\n      <Modal.Header>\n        <img\n          className=\"mx-auto\"\n          style={{\n            borderTopRightRadius: \"50%\",\n            borderTopLeftRadius: \"50%\",\n          }}\n          width=\"40rem\"\n          src={PwaIcon}\n          alt=\"Icon\"\n        />\n      </Modal.Header>\n      <Modal.Body>\n        <Card.Text className=\"text-center\">\n          Open browser settings and tap &quot;Add to Home Screen&quot; to\n          install the app\n        </Card.Text>\n        <div className=\"d-flex justify-content-center\">\n          <Button onClick={onPromptClick}>Close</Button>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n","import { useState } from \"react\";\n\nimport PageSelection from \"./Components/PageSelection/PageSelection.js\";\nimport { Products, LocalStorageSource, TestSource } from \"./Products\";\nimport DateService from \"./Utils/DateService\";\nimport { PwaPrompt } from \"./Components/PwaPrompt\";\n\nimport { Container, Alert } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst products =\n  process.env.NODE_ENV !== \"test\"\n    ? new Products(LocalStorageSource, new DateService())\n    : new Products(TestSource.initialize(), new DateService());\nfunction App() {\n  const [allProducts, setAllProducts] = useState(products.getAll());\n  const [currentProduct, setCurrentProduct] = useState(null);\n  const [showForgetAlert, setShowForgetAlert] = useState(false);\n\n  const createProduct = (product) => {\n    products.create.bind(products)(product);\n    setAllProducts(products.getAll());\n  };\n  const updateProduct = (productId, product) => {\n    products.update.bind(products)(productId, product);\n    setAllProducts(products.getAll());\n  };\n  const removeProduct = (product) => {\n    products.remove.bind(products)(product.id);\n    setAllProducts(products.getAll());\n    setShowForgetAlert(true);\n    setTimeout(() => {\n      setShowForgetAlert(false);\n    }, 2000);\n  };\n  const increaseLikeCount = (productId) => {\n    products.increaseLikeCount.bind(products)(productId);\n    setAllProducts(products.getAll());\n  };\n\n  return (\n    <Container>\n      <PwaPrompt />\n      <header>\n        <PageSelection\n          pages={App.pages}\n          allProducts={allProducts}\n          createProduct={createProduct}\n          removeProduct={removeProduct}\n          updateProduct={updateProduct}\n          increaseLikeCount={increaseLikeCount}\n          setCurrentProduct={setCurrentProduct}\n          currentProduct={currentProduct}\n        />\n      </header>\n      <Alert show={showForgetAlert} variant=\"success\" className=\"my-1\">\n        <p>The product has been removed from the list. Good job!</p>\n      </Alert>\n    </Container>\n  );\n}\n\nApp.pages = { HOME: \"HOME\", EDIT_PRODUCT: \"EDIT_PRODUCT\" };\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}