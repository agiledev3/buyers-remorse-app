{"version":3,"sources":["Components/PageSelection/Pages.js","Components/Home/ListItem.js","Components/Home/ProductList.js","Components/Home/NewQuestionModal.js","Components/Home/useNewQuestionModal.js","Components/Home/index.js","Components/EditProduct/useForm.js","Components/EditProduct/index.js","Components/PageSelection/PageSelection.js","Products/sources/LocalStorageSource.js","Products/index.js","Utils/DateService.js","App.js","reportWebVitals.js","index.js"],"names":["Pages","HOME","EDIT_PRODUCT","ListItem","props","product","id","name","daysLeft","likeCount","Card","className","Title","Row","Col","Button","variant","title","onClick","changePage","setCurrentProduct","openNewQuestionModal","style","paddingLeft","paddingRight","marginLeft","Badge","ProductList","sm","span","fontSize","allProducts","map","NewQuestionModal","Modal","show","onHide","Header","Body","question","Form","Group","controlId","Label","Control","type","placeholder","value","answer","onChange","e","onAnswerChange","target","Text","muted","Footer","disabled","length","onSaveClick","productId","useNewQuestionModal","questions","useState","setShow","setQuestion","setAnswer","setProductId","closeNewQuestionModal","find","q","findQuestionNotAlreadyAnswered","handleAnswerChange","Home","Fragment","updateProduct","increaseLikeCount","useForm","existingProduct","initProduct","linkToBuy","reasonToBuy","reminderPeriod","coolingPeriod","setValues","handleChange","event","handleReset","EditProduct","resetAndGoHome","xs","size","onSubmit","preventDefault","createProduct","htmlFor","data-testid","required","as","rows","min","max","maxWidth","lg","aligned","PageSelection","selectedPage","setSelectedPage","currentProduct","LocalStorageSource","read","localStorage","getItem","JSON","parse","write","entity","source","this","filter","calculateNextId","push","setItem","stringify","entities","Math","element","Products","DataSource","DateService","_calculateDaysLeft","createdAt","nowMs","dateService","getCurrent","getTime","diffDays","Date","msInDay","floor","dataSource","products","_readProductsFromSource","forEach","productChanges","getOne","updatedProduct","_writeProductToSource","undefined","toISOString","App","getAll","setAllProducts","Container","pages","create","bind","update","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b80fd89.chunk.js","sourcesContent":["// list of pages in the app. \n// Use to switch pages from another component by importing \nconst Pages = {HOME: \"Home\", EDIT_PRODUCT: \"EDIT_PRODUCT\"}\n\nexport default Pages","import React from \"react\";\nimport { Card, Col, Row, Button, Badge } from \"react-bootstrap\";\nimport Pages from \"../PageSelection/Pages\";\n\nfunction ListItem(props) {\n  const { id, name, daysLeft, likeCount } = props.product;\n\n    const handleEditClick = () => {\n        props.changePage(Pages.EDIT_PRODUCT)\n        props.setCurrentProduct(props.product)\n    }\n\n  return (\n    <Card className=\"p-3\" id={id} key={id}>\n      <Card.Title>{name}</Card.Title>\n      <Row>\n        <Col>\n          {daysLeft === 0 ? (\n            <Button variant=\"btn btn-outline-success\" className=\"px-3\">\n              <i className=\"fas fa-minus-circle\"></i> Forget\n            </Button>\n          ) : (\n            <span>\n              <i className=\"far fa-clock\"></i> {daysLeft} days left\n            </span>\n          )}\n        </Col>\n        <Col className=\"text-right\">\n          <Button\n            variant=\"outline-secondary\"\n            title=\"Edit product\"\n            onClick={handleEditClick}\n          >\n            <i className=\"fas fa-pen\"></i>\n          </Button>\n          <Button\n            variant=\"success\"\n            onClick={() => props.openNewQuestionModal(props.product)}\n            style={{\n              paddingLeft: \"0.55em\",\n              paddingRight: \"0.2em\",\n              marginLeft: \"0.3em\",\n            }}\n          >\n            <i className=\"fas fa-thumbs-up\"></i>\n            <sup>\n              <Badge variant=\"light\">\n                {likeCount}\n              </Badge>\n            </sup>\n          </Button>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default ListItem;\n","import React from \"react\";\nimport ListItem from \"./ListItem\";\nimport Pages from \"../PageSelection/Pages\";\nimport { Card, Col, Row, Button } from \"react-bootstrap\";\n\nfunction ProductList(props) {\n\n    const handleAddClick = () => {\n        props.changePage(Pages.EDIT_PRODUCT)\n    }\n\n  return (\n    <div>\n      <Card className=\"p-2\">\n        <Card.Title className=\"text-center\">\n          <Row>\n            <Col sm={{ span: 2 }}></Col>\n            <Col sm={{ span: 8 }}>Buyer's regret</Col>\n            <Col sm={{ span: 2 }} style={{ fontSize: \"2em\" }}>\n              <i className=\"far fa-user-circle align-middle\"></i>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={{ span: 2 }}></Col>\n            <Col sm={{ span: 8 }}>My wishlist</Col>\n            <Col sm={{ span: 2 }}></Col>\n          </Row>\n        </Card.Title>\n      </Card>\n      {props.allProducts.map((product) => (\n        <ListItem\n          key={product.id}\n          product={product}\n          changePage={props.changePage}\n          openNewQuestionModal={props.openNewQuestionModal}\n          setCurrentProduct={props.setCurrentProduct}\n        />\n      ))}\n      <Button\n        variant=\"primary\"\n        className=\"float-right my-3\"\n        title=\"Add new product\"\n        onClick={handleAddClick}\n      >\n        <i className=\"fas fa-plus\"></i>\n      </Button>\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React from \"react\";\nimport { Modal, Form, Button } from \"react-bootstrap\";\n\nconst NewQuestionModal = (props) => {\n  return (\n    <Modal show={props.show} onHide={props.onHide}>\n      <Modal.Header>\n        <Modal.Title>Increase product buying score</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        {!!props.question && (\n          <Form>\n            <Form.Group controlId=\"formQuestion\">\n              <Form.Label>{props.question}</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your answer...\"\n                value={props.answer}\n                onChange={(e) => props.onAnswerChange(e.target.value)}\n              />\n              <Form.Text muted>\n                To increase the score of this product you must answer the\n                question above.\n              </Form.Text>\n            </Form.Group>\n          </Form>\n        )}\n        {!props.question && (\n          <p>\n            <strong>\n              Do you want to increase the buying score of this product?\n            </strong>\n          </p>\n        )}\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button variant=\"outline-secondary\" onClick={props.onHide}>\n          Cancel\n        </Button>\n        <Button\n          variant=\"primary\"\n          disabled={!!props.question && props.answer.length === 0}\n          onClick={() =>\n            props.onSaveClick({\n              productId: props.productId,\n              question: props.question,\n              answer: props.answer,\n            })\n          }\n        >\n          Confirm\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default NewQuestionModal;\n","import { useState } from \"react\";\n\nconst findQuestionNotAlreadyAnswered = (questions, product) => {\n  if (!product.questions) return questions[0];\n  return questions.find((q) => !product.questions[q]);\n};\n\nconst useNewQuestionModal = (questions) => {\n  const [show, setShow] = useState(false);\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [productId, setProductId] = useState(null);\n\n  const closeNewQuestionModal = () => {\n    setAnswer('');\n    setShow(false);\n  };\n\n  const openNewQuestionModal = (product) => {\n    setQuestion(findQuestionNotAlreadyAnswered(questions, product));\n    setProductId(product.id);\n    setShow(true);\n  };\n\n  const handleAnswerChange = (answer) => {\n    setAnswer(answer);\n  };\n\n  return {\n    closeNewQuestionModal,\n    openNewQuestionModal,\n    handleAnswerChange,\n    question,\n    show,\n    answer,\n    productId,\n  };\n};\n\nexport default useNewQuestionModal;\n","import React from \"react\";\nimport ProductList from \"./ProductList\";\nimport NewQuestionModal from \"./NewQuestionModal.js\";\nimport useNewQuestionModal from \"./useNewQuestionModal.js\";\nimport questions from \"./questions.json\";\n\nconst Home = (props) => {\n  const {\n    openNewQuestionModal,\n    closeNewQuestionModal,\n    handleAnswerChange,\n    show,\n    question,\n    answer,\n    productId\n  } = useNewQuestionModal(questions);\n\n  const handleNewQuestionSave = ({ productId, question, answer }) => {\n    if (question && answer)\n      props.updateProduct(productId, { questions: { [question]: answer } });\n    props.increaseLikeCount(productId);\n    closeNewQuestionModal();\n  };\n\n  return (\n    <React.Fragment>\n      <ProductList\n        allProducts={props.allProducts}\n        changePage={props.changePage}\n        setCurrentProduct={props.setCurrentProduct}\n        openNewQuestionModal={openNewQuestionModal}\n      />\n      <NewQuestionModal\n        productId={productId}\n        show={show}\n        question={question}\n        answer={answer}\n        onHide={closeNewQuestionModal}\n        onSaveClick={handleNewQuestionSave}\n        onAnswerChange={handleAnswerChange}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import { useState } from 'react'\r\n\r\nconst useForm = (existingProduct) => {\r\n\t//use a passed product to edit; if none is passed - construct a default one to create\r\n\tconst initProduct = existingProduct ? existingProduct :  {\r\n\t\tname: \"\",\r\n\t\tlinkToBuy: \"\",\r\n\t\treasonToBuy: \"\",\r\n\t\treminderPeriod: 7,\r\n\t\tcoolingPeriod: 30,\r\n\t};\r\n\r\n\tconst [product, setValues] = useState(initProduct)\r\n\tconst handleChange = (event) => {\r\n\t\tconst { name, value } = event.target\r\n\t\tsetValues({...product, [name]: value})\r\n\t}\r\n\tconst handleReset = () =>{\r\n\t\tsetValues({...initProduct})\r\n\t}\r\n\r\n\treturn {handleChange, handleReset, product}\r\n}\r\n\r\nexport default useForm\r\n","import React from \"react\"\nimport useForm from './useForm'\nimport Pages from '../PageSelection/Pages'\nimport { Col, Row, Card, Button, Form } from 'react-bootstrap'\n\nconst EditProduct = (props) => {\n\tconst { handleChange, handleReset, product } = useForm(props.product);\n\tconst handleSubmit = (e) =>{\n\t\te.preventDefault();\t\t\n\t\tif(product.id){\n\t\t\tprops.updateProduct(product.id, product)\n\t\t}\n\t\telse{\n\t\t\tprops.createProduct(product)\n\t\t}\n\t\tprops.changePage(Pages.HOME);\n\t\tprops.setCurrentProduct(null);\n\t}\n\n    const resetAndGoHome = () =>{\n        handleReset();\n        props.changePage(Pages.HOME);\n\t\tprops.setCurrentProduct(null);\n    }\n\n\treturn(\n\t\t<React.Fragment>\n\t\t\t<Card className=\"my-2\">\n\t\t\t\t<Card.Title className='text-center'>\n\t\t\t\t\t<Row className=\"p-1\">\n\t\t                 <Col xs={{span:2}} style={{fontSize:\"2em\"}}>\n\t\t                  \t<Button variant=\"outline-dark\" size=\"lg\" onClick={resetAndGoHome}>\n\t\t\t\t\t\t\t\t<i className=\"fas fa-chevron-left align-center\"></i>\n\t\t\t\t\t\t\t</Button>\n\t\t                 </Col>\n\t\t                 <Col xs={{span:8}}>\n\t\t                        Buyer's regret\n\t\t                 </Col>\n\t\t                    <Col xs={{span:2}} style={{fontSize:\"2em\"}}>\n\t\t                   \t<i className=\"far fa-user-circle align-middle\"></i>\n\t\t                 </Col>\n\t\t            </Row>\n\t\t            <Row>\n\t\t                <Col sm={{span:2}}></Col>\n\t\t                <Col sm={{span:8}}>\n\t\t                        Product Details\n\t\t                </Col>\n\t\t                <Col sm={{span:2}}></Col>\n\t\t            </Row>\n\t\t\t\t</Card.Title>\n\t\t\t</Card>\n\t\t\t<Form className=\"product-form\" onSubmit={handleSubmit}>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"name\">Product name:</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={product.name}\n\t\t\t\t\t\tplaceholder=\"Product name ...\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tdata-testid=\"name\"\n\t\t\t\t\t\trequired/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"linkToBuy\">Link to buy:</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={product.linkToBuy}\n\t\t\t\t\t\tplaceholder=\"Link to a website ...\"\n\t\t\t\t\t\tname=\"linkToBuy\"\n\t\t\t\t\t\tid=\"linkToBuy\"\n\t\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"reasonToBuy\">Why would you like to buy this product?</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={product.reasonToBuy}\n\t\t\t\t\t\tplaceholder=\"Reason to buy ...\"\n\t\t\t\t\t\tname=\"reasonToBuy\"\n\t\t\t\t\t\tid=\"reasonToBuy\"\n\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\trows=\"3\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\t />\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Row>\n\t\t\t\t<Form.Group as={Col} xs=\"auto\">\n\t\t\t\t\t<Form.Label htmlFor=\"reminderPeriod\">How long should I wait before I remind you about this product?</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={product.reminderPeriod}\n\t\t\t\t\t\tplaceholder=\"Days ...\"\n\t\t\t\t\t\tname=\"reminderPeriod\"\n\t\t\t\t\t\tid=\"reminderPeriod\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\tmax=\"30\"\n\t\t\t\t\t\tstyle={{maxWidth:\"5rem\"}}\n\t\t\t\t\t\t />\n\t\t\t\t</Form.Group>\n\t\t\t\t<Col lg=\"2\"></Col>\n\t\t\t\t<Form.Group as={Col} xs=\"auto\">\n\t\t\t\t\t<Form.Label htmlFor=\"coolingPeriod\">How long should I lock the buy button?</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={product.coolingPeriod}\n\t\t\t\t\t\tplaceholder=\"Days ...\"\n\t\t\t\t\t\tname=\"coolingPeriod\"\n\t\t\t\t\t\tid=\"coolingPeriod\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\tmax=\"90\"\n\t\t\t\t\t\tstyle={{maxWidth:\"5rem\"}}\n\t\t\t\t\t\t />\n\t\t\t\t</Form.Group>\n\t\t\t\t</Form.Row>\n\t\t\t\t<Form.Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<Button variant=\"outline-danger\" aligned=\"left aligned\" size=\"lg\" onClick={resetAndGoHome}>\n\t\t\t\t\t\t<i className=\"fas fa-times-circle\"></i>\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t\t<Col xs=\"auto\">\n\t\t\t\t\t<Button variant=\"outline-success\" aligned=\"right aligned\" type=\"submit\" size=\"lg\" title=\"Save product\">\n\t\t\t\t\t\t<i className=\"fas fa-check\"></i>\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t\t</Form.Row>\n\t\t\t</Form>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default EditProduct;\n","import { useState } from 'react'\nimport { Fragment } from 'react';\nimport Home from '../Home'\nimport EditProduct from '../EditProduct'\n//list of pages in the app\nimport Pages from './Pages'\n\n\n// Component used to track the currently selected page and switch between pages.\n// To change to a new page from another component import 'Pages' as above and\n// pass setSelectedPage method down the tree to your component.\n// Call setSelectedPage(Pages.<new_page>) to change to the new_page page.\nconst PageSelection = (props) => {\n    const [selectedPage, setSelectedPage] = useState(Pages.HOME)\n\n    return (\n        <Fragment>\n            {selectedPage === Pages.HOME && <Home allProducts={props.allProducts} changePage={setSelectedPage} updateProduct={props.updateProduct} setCurrentProduct={props.setCurrentProduct} increaseLikeCount={props.increaseLikeCount} /> }\n            {selectedPage === Pages.EDIT_PRODUCT && <EditProduct product={props.currentProduct}\n                                                                 setCurrentProduct={props.setCurrentProduct}\n                                                                 changePage={setSelectedPage}\n                                                                 createProduct={props.createProduct}\n                                                                 updateProduct={props.updateProduct}/> }\n        </Fragment>\n    )\n}\n\nexport default PageSelection\n","const LocalStorageSource = {\n  read(name) {\n    var value = localStorage.getItem(name);\n    if(value)\n        return JSON.parse(value);\n    return [];\n  },\n\n  write(name, entity, id) {\n    var source = this.read(name);\n\n    //try remove old version if exists\n    if(id) {\n      source = source.filter(e => e.id !== id);\n    }else{\n      //set a unique id\n      entity.id = this.calculateNextId(source);\n    }\n    source.push(entity)\n\n    localStorage.setItem(name, JSON.stringify(source));\n  },\n\n  //emulates identity generation\n  calculateNextId(entities) {\n    if(!entities || entities.length === 0)\n      return 1;\n    return Math.max(...entities.map((element) => element.id)) + 1;\n  }\n}\n\nexport default LocalStorageSource;\n","import TestSource from \"./sources/TestSource\";\nimport LocalStorageSource from \"./sources/LocalStorageSource\";\n\nclass Products {\n  constructor(DataSource, DateService) {\n    this.dataSource = DataSource;\n    this.dateService = DateService;\n  }\n\n  getAll() {\n    var products = this._readProductsFromSource();\n    //recalculates daysLeft property for each item\n    products.forEach((element) => {\n      element.daysLeft = this._calculateDaysLeft(\n        element.createdAt,\n        element.coolingPeriod\n      );\n    });\n    return products;\n  }\n\n  getOne(id) {\n    return this._readProductsFromSource().find((product) => product.id === id);\n  }\n\n  update(productId, productChanges) {\n    const product = this.getOne(productId);\n    const updatedProduct = {\n      ...product,\n      ...productChanges,\n      questions: { ...product.questions, ...productChanges.questions },\n    };\n    this._writeProductToSource(productId, updatedProduct);\n  }\n\n  increaseLikeCount(productId) {\n    const product = this.getOne(productId);\n    const updatedProduct = {\n      ...product,\n      likeCount: product.likeCount !== undefined ? product.likeCount + 1 : 0,\n    };\n    this._writeProductToSource(productId, updatedProduct);\n  }\n\n  create(product) {\n    //init data for new product\n    product.likeCount = 0;\n    product.createdAt = new Date().toISOString();\n    product.daysLeft = product.coolingPeriod;\n\n    this._writeProductToSource(null, product);\n  }\n\n  remove(productId) {}\n\n  _readProductsFromSource() {\n    return this.dataSource.read(\"products\");\n  }\n\n  _writeProductToSource(id, product) {\n    const result = this.dataSource.write(\"products\", product, id);\n    return result;\n  }\n\n  //createdAt: string in ISO format\n  _calculateDaysLeft = (createdAt, coolingPeriod) => {\n    let nowMs = this.dateService.getCurrent().getTime();\n    let createdAtMs = Date.parse(createdAt);\n    let coolingDeadline =\n      createdAtMs + coolingPeriod * this.dateService.msInDay();\n    let diffDays = (coolingDeadline - nowMs) / this.dateService.msInDay();\n    //if difference is larger than 1 day i.e. cooling period hasn't lapsed yet - find value in days\n    return diffDays > 1 ? Math.floor(diffDays) : 0;\n  };\n}\n\nexport { Products, LocalStorageSource, TestSource };\n","class DateService {\n  //get current date object\n  getCurrent() {\n    return new Date();\n  }\n\n  //miliseconds in a day\n  msInDay(){\n    return 86400000;\n  }\n\n}\n\nexport default DateService ;\n","import { useState } from \"react\";\n\nimport PageSelection from \"./Components/PageSelection/PageSelection.js\";\nimport { Products, LocalStorageSource, TestSource } from \"./Products\";\nimport DateService from \"./Utils/DateService\";\n\nimport Container from \"react-bootstrap/Container\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst products =\n  process.env.NODE_ENV !== 'test'\n    ? new Products(LocalStorageSource, new DateService())\n    : new Products(TestSource.initialize(), new DateService());\nfunction App() {\n  const [allProducts, setAllProducts] = useState(products.getAll());\n  const [currentProduct, setCurrentProduct] = useState(null);\n\n  const createProduct = (product) => {\n    products.create.bind(products)(product);\n    setAllProducts(products.getAll());\n  };\n  const updateProduct = (productId, product) => {\n    products.update.bind(products)(productId, product);\n    setAllProducts(products.getAll());\n  };\n  const increaseLikeCount = (productId) => {\n    products.increaseLikeCount.bind(products)(productId);\n    setAllProducts(products.getAll());\n  };\n\n  return (\n    <Container>\n      <header>\n        <PageSelection\n          pages={App.pages}\n          allProducts={allProducts}\n          createProduct={createProduct}\n          updateProduct={updateProduct}\n          increaseLikeCount={increaseLikeCount}\n          setCurrentProduct={setCurrentProduct}\n          currentProduct={currentProduct}\n        />\n      </header>\n    </Container>\n  );\n}\n\nApp.pages = { HOME: \"HOME\", EDIT_PRODUCT: \"EDIT_PRODUCT\" };\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}