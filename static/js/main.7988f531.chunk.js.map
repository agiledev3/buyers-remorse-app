{"version":3,"sources":["Components/PageSelection/Pages.js","Components/Home/ListItem.js","Components/Home/ProductList.js","Components/Home/NewQuestionModal.js","Components/Home/useNewQuestionModal.js","Components/Home/index.js","Components/EditProduct/useForm.js","Components/EditProduct/index.js","Components/PageSelection/PageSelection.js","Products/sources/LocalStorageSource.js","Products/index.js","Utils/DateService.js","Components/PwaPrompt/useAppInstallPrompt.js","Components/PwaPrompt/pwa.ico","Components/PwaPrompt/index.js","Components/StaticHeader/index.js","App.js","reportWebVitals.js","index.js"],"names":["Pages","HOME","EDIT_PRODUCT","ListItem","props","product","id","name","daysLeft","likeCount","Card","className","Title","Row","Col","Button","variant","onClick","removeProduct","title","changePage","setCurrentProduct","openNewQuestionModal","style","paddingLeft","paddingRight","marginLeft","Badge","ProductList","allProducts","map","NewQuestionModal","Modal","show","onHide","Header","Body","question","Form","Group","controlId","Label","Control","type","placeholder","value","answer","onChange","e","onAnswerChange","target","Text","muted","Footer","disabled","length","onSaveClick","productId","useNewQuestionModal","questions","useState","setShow","setQuestion","setAnswer","setProductId","closeNewQuestionModal","find","q","findQuestionNotAlreadyAnswered","handleAnswerChange","Home","useEffect","setStaticHeader","onBackButtonClick","updateProduct","increaseLikeCount","useForm","existingProduct","initProduct","linkToBuy","reasonToBuy","reminderPeriod","coolingPeriod","setValues","handleChange","event","handleReset","EditProduct","resetAndGoHome","onSubmit","preventDefault","createProduct","htmlFor","data-testid","required","as","rows","xs","min","max","maxWidth","lg","aligned","size","PageSelection","selectedPage","setSelectedPage","currentProduct","LocalStorageSource","read","localStorage","getItem","JSON","parse","write","entity","source","this","filter","calculateNextId","push","setItem","stringify","entities","Math","element","Products","DataSource","DateService","_calculateDaysLeft","createdAt","nowMs","dateService","getCurrent","getTime","diffDays","Date","msInDay","floor","dataSource","products","_readProductsFromSource","forEach","productChanges","getOne","updatedProduct","_writeProductToSource","undefined","toISOString","lastPromptedAt","useAppInstallPrompt","navigator","standalone","lastPrompt","daysSinceLastPrompt","isNaN","getUserShouldBePromptedToInstall","userShouldBePromptedToInstall","setUserShouldBePromptedToInstall","isMobile","PwaPrompt","appInstallPrompt","onPromptClick","borderTopRightRadius","borderTopLeftRadius","width","src","PwaIcon","alt","StaticHeader","span","fontSize","sm","App","staticHeader","getAll","setAllProducts","showForgetAlert","setShowForgetAlert","Container","pages","create","bind","remove","setTimeout","update","Alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7988f531.chunk.js","sourcesContent":["// list of pages in the app.\n// Use to switch pages from another component by importing\nconst Pages = { HOME: \"Home\", EDIT_PRODUCT: \"EDIT_PRODUCT\" };\n\nexport default Pages;\n","import React from \"react\";\nimport { Card, Col, Row, Button, Badge } from \"react-bootstrap\";\nimport Pages from \"../PageSelection/Pages\";\n\nfunction ListItem(props) {\n  const { id, name, daysLeft, likeCount } = props.product;\n\n  const handleEditClick = () => {\n    props.changePage(Pages.EDIT_PRODUCT);\n    props.setCurrentProduct(props.product);\n  };\n\n  return (\n    <Card className=\"p-3\" id={id} key={id}>\n      <Card.Title>{name}</Card.Title>\n      <Row>\n        <Col>\n          {daysLeft === 0 ? (\n            <Button\n              variant=\"btn btn-outline-success\"\n              className=\"px-3\"\n              onClick={() => props.removeProduct(props.product)}\n            >\n              <i className=\"fas fa-minus-circle\"></i> Forget\n            </Button>\n          ) : (\n            <span>\n              <i className=\"far fa-clock\"></i> {daysLeft} days left\n            </span>\n          )}\n        </Col>\n        <Col className=\"text-right\">\n          <Button\n            variant=\"outline-secondary\"\n            title=\"Edit product\"\n            onClick={handleEditClick}\n          >\n            <i className=\"fas fa-pen\"></i>\n          </Button>\n          <Button\n            variant=\"success\"\n            onClick={() => props.openNewQuestionModal(props.product)}\n            style={{\n              paddingLeft: \"0.55em\",\n              paddingRight: \"0.2em\",\n              marginLeft: \"0.3em\",\n            }}\n          >\n            <i className=\"fas fa-thumbs-up\"></i>\n            <sup>\n              <Badge variant=\"light\">{likeCount}</Badge>\n            </sup>\n          </Button>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default ListItem;\n","import React from \"react\";\nimport ListItem from \"./ListItem\";\nimport Pages from \"../PageSelection/Pages\";\nimport { Button } from \"react-bootstrap\";\n\nfunction ProductList(props) {\n  const handleAddClick = () => {\n    props.changePage(Pages.EDIT_PRODUCT);\n  };\n\n  return (\n    <div>\n      {props.allProducts.map((product) => (\n        <ListItem\n          key={product.id}\n          product={product}\n          changePage={props.changePage}\n          openNewQuestionModal={props.openNewQuestionModal}\n          removeProduct={props.removeProduct}\n          setCurrentProduct={props.setCurrentProduct}\n        />\n      ))}\n      <Button\n        variant=\"primary\"\n        className=\"float-right my-3\"\n        title=\"Add new product\"\n        onClick={handleAddClick}\n      >\n        <i className=\"fas fa-plus\"></i>\n      </Button>\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React from \"react\";\nimport { Modal, Form, Button } from \"react-bootstrap\";\n\nconst NewQuestionModal = (props) => {\n  return (\n    <Modal show={props.show} onHide={props.onHide}>\n      <Modal.Header>\n        <Modal.Title>Increase product buying score</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        {!!props.question && (\n          <Form>\n            <Form.Group controlId=\"formQuestion\">\n              <Form.Label>{props.question}</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your answer...\"\n                value={props.answer}\n                onChange={(e) => props.onAnswerChange(e.target.value)}\n              />\n              <Form.Text muted>\n                To increase the score of this product you must answer the\n                question above.\n              </Form.Text>\n            </Form.Group>\n          </Form>\n        )}\n        {!props.question && (\n          <p>\n            <strong>\n              Do you want to increase the buying score of this product?\n            </strong>\n          </p>\n        )}\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button variant=\"outline-secondary\" onClick={props.onHide}>\n          Cancel\n        </Button>\n        <Button\n          variant=\"primary\"\n          disabled={!!props.question && props.answer.length === 0}\n          onClick={() =>\n            props.onSaveClick({\n              productId: props.productId,\n              question: props.question,\n              answer: props.answer,\n            })\n          }\n        >\n          Confirm\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default NewQuestionModal;\n","import { useState } from \"react\";\n\nconst findQuestionNotAlreadyAnswered = (questions, product) => {\n  if (!product.questions) return questions[0];\n  return questions.find((q) => !product.questions[q]);\n};\n\nconst useNewQuestionModal = (questions) => {\n  const [show, setShow] = useState(false);\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [productId, setProductId] = useState(null);\n\n  const closeNewQuestionModal = () => {\n    setAnswer(\"\");\n    setShow(false);\n  };\n\n  const openNewQuestionModal = (product) => {\n    setQuestion(findQuestionNotAlreadyAnswered(questions, product));\n    setProductId(product.id);\n    setShow(true);\n  };\n\n  const handleAnswerChange = (answer) => {\n    setAnswer(answer);\n  };\n\n  return {\n    closeNewQuestionModal,\n    openNewQuestionModal,\n    handleAnswerChange,\n    question,\n    show,\n    answer,\n    productId,\n  };\n};\n\nexport default useNewQuestionModal;\n","import { useEffect, Fragment } from \"react\";\nimport ProductList from \"./ProductList\";\nimport NewQuestionModal from \"./NewQuestionModal.js\";\nimport useNewQuestionModal from \"./useNewQuestionModal.js\";\nimport questions from \"./questions.json\";\n\nconst Home = (props) => {\n  const {\n    openNewQuestionModal,\n    closeNewQuestionModal,\n    handleAnswerChange,\n    show,\n    question,\n    answer,\n    productId,\n  } = useNewQuestionModal(questions);\n\n  const handleNewQuestionSave = ({ productId, question, answer }) => {\n    if (question && answer)\n      props.updateProduct(productId, { questions: { [question]: answer } });\n    props.increaseLikeCount(productId);\n    closeNewQuestionModal();\n  };\n\n  useEffect(() => {\n    props.setStaticHeader({\n      title: \"My wishlist\",\n      onBackButtonClick: null,\n    });\n    //eslint-disable-next-line\n  }, []);\n\n  return (\n    <Fragment>\n      <ProductList\n        allProducts={props.allProducts}\n        changePage={props.changePage}\n        removeProduct={props.removeProduct}\n        setCurrentProduct={props.setCurrentProduct}\n        openNewQuestionModal={openNewQuestionModal}\n      />\n      <NewQuestionModal\n        productId={productId}\n        show={show}\n        question={question}\n        answer={answer}\n        onHide={closeNewQuestionModal}\n        onSaveClick={handleNewQuestionSave}\n        onAnswerChange={handleAnswerChange}\n      />\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import { useState } from \"react\";\n\nconst useForm = (existingProduct) => {\n  //use a passed product to edit; if none is passed - construct a default one to create\n  const initProduct = existingProduct\n    ? existingProduct\n    : {\n        name: \"\",\n        linkToBuy: \"\",\n        reasonToBuy: \"\",\n        reminderPeriod: 7,\n        coolingPeriod: 30,\n      };\n\n  const [product, setValues] = useState(initProduct);\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setValues({ ...product, [name]: value });\n  };\n  const handleReset = () => {\n    setValues({ ...initProduct });\n  };\n\n  return { handleChange, handleReset, product };\n};\n\nexport default useForm;\n","import { useEffect } from \"react\";\nimport useForm from \"./useForm\";\nimport Pages from \"../PageSelection/Pages\";\nimport { Col, Button, Form } from \"react-bootstrap\";\n\nconst EditProduct = (props) => {\n  const { handleChange, handleReset, product } = useForm(props.product);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (product.id) {\n      props.updateProduct(product.id, product);\n    } else {\n      props.createProduct(product);\n    }\n    props.changePage(Pages.HOME);\n    props.setCurrentProduct(null);\n  };\n\n  const resetAndGoHome = () => {\n    handleReset();\n    props.changePage(Pages.HOME);\n    props.setCurrentProduct(null);\n  };\n\n  useEffect(() => {\n    props.setStaticHeader({\n      title: \"Product Details\",\n      onBackButtonClick: resetAndGoHome,\n    });\n    //eslint-disable-next-line\n  }, []);\n\n  return (\n    <Form className=\"product-form\" onSubmit={handleSubmit}>\n      <Form.Group>\n        <Form.Label htmlFor=\"name\">Product name:</Form.Label>\n        <Form.Control\n          onChange={handleChange}\n          value={product.name}\n          placeholder=\"Product name ...\"\n          name=\"name\"\n          id=\"name\"\n          data-testid=\"name\"\n          required\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"linkToBuy\">Link to buy:</Form.Label>\n        <Form.Control\n          onChange={handleChange}\n          value={product.linkToBuy}\n          placeholder=\"Link to a website ...\"\n          name=\"linkToBuy\"\n          id=\"linkToBuy\"\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label htmlFor=\"reasonToBuy\">\n          Why would you like to buy this product?\n        </Form.Label>\n        <Form.Control\n          onChange={handleChange}\n          value={product.reasonToBuy}\n          placeholder=\"Reason to buy ...\"\n          name=\"reasonToBuy\"\n          id=\"reasonToBuy\"\n          as=\"textarea\"\n          rows=\"3\"\n          required\n        />\n      </Form.Group>\n      <Form.Row>\n        <Form.Group as={Col} xs=\"auto\">\n          <Form.Label htmlFor=\"reminderPeriod\">\n            How long should I wait before I remind you about this product?\n          </Form.Label>\n          <Form.Control\n            onChange={handleChange}\n            value={product.reminderPeriod}\n            placeholder=\"Days ...\"\n            name=\"reminderPeriod\"\n            id=\"reminderPeriod\"\n            type=\"number\"\n            min=\"1\"\n            max=\"30\"\n            style={{ maxWidth: \"5rem\" }}\n          />\n        </Form.Group>\n        <Col lg=\"2\"></Col>\n        <Form.Group as={Col} xs=\"auto\">\n          <Form.Label htmlFor=\"coolingPeriod\">\n            How long should I lock the buy button?\n          </Form.Label>\n          <Form.Control\n            onChange={handleChange}\n            value={product.coolingPeriod}\n            placeholder=\"Days ...\"\n            name=\"coolingPeriod\"\n            id=\"coolingPeriod\"\n            type=\"number\"\n            min=\"1\"\n            max=\"90\"\n            style={{ maxWidth: \"5rem\" }}\n          />\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Col>\n          <Button\n            variant=\"outline-danger\"\n            aligned=\"left aligned\"\n            size=\"lg\"\n            onClick={resetAndGoHome}\n          >\n            <i className=\"fas fa-times-circle\"></i>\n          </Button>\n        </Col>\n        <Col xs=\"auto\">\n          <Button\n            variant=\"outline-success\"\n            aligned=\"right aligned\"\n            type=\"submit\"\n            size=\"lg\"\n            title=\"Save product\"\n          >\n            <i className=\"fas fa-check\"></i>\n          </Button>\n        </Col>\n      </Form.Row>\n    </Form>\n  );\n};\n\nexport default EditProduct;\n","import { useState, Fragment } from \"react\";\nimport Home from \"../Home\";\nimport EditProduct from \"../EditProduct\";\n//list of pages in the app\nimport Pages from \"./Pages\";\n\n// Component used to track the currently selected page and switch between pages.\n// To change to a new page from another component import 'Pages' as above and\n// pass setSelectedPage method down the tree to your component.\n// Call setSelectedPage(Pages.<new_page>) to change to the new_page page.\nconst PageSelection = (props) => {\n  const [selectedPage, setSelectedPage] = useState(Pages.HOME);\n\n  return (\n    <Fragment>\n      {selectedPage === Pages.HOME && (\n        <Home\n          allProducts={props.allProducts}\n          changePage={setSelectedPage}\n          setStaticHeader={props.setStaticHeader}\n          updateProduct={props.updateProduct}\n          removeProduct={props.removeProduct}\n          setCurrentProduct={props.setCurrentProduct}\n          increaseLikeCount={props.increaseLikeCount}\n        />\n      )}\n      {selectedPage === Pages.EDIT_PRODUCT && (\n        <EditProduct\n          product={props.currentProduct}\n          setCurrentProduct={props.setCurrentProduct}\n          changePage={setSelectedPage}\n          setStaticHeader={props.setStaticHeader}\n          createProduct={props.createProduct}\n          updateProduct={props.updateProduct}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default PageSelection;\n","const LocalStorageSource = {\n  read(name) {\n    var value = localStorage.getItem(name);\n    if (value) return JSON.parse(value);\n    return [];\n  },\n\n  write(name, entity, id) {\n    var source = this.read(name);\n\n    //try remove old version if exists\n    if (id) {\n      source = source.filter((e) => e.id !== id);\n    } else {\n      //set a unique id\n      entity.id = this.calculateNextId(source);\n    }\n    // handles remove if entity is null or undefined\n    if (entity) {\n      source.push(entity);\n    }\n\n    localStorage.setItem(name, JSON.stringify(source));\n  },\n\n  //emulates identity generation\n  calculateNextId(entities) {\n    if (!entities || entities.length === 0) return 1;\n    return Math.max(...entities.map((element) => element.id)) + 1;\n  },\n};\n\nexport default LocalStorageSource;\n","import TestSource from \"./sources/TestSource\";\nimport LocalStorageSource from \"./sources/LocalStorageSource\";\n\nclass Products {\n  constructor(DataSource, DateService) {\n    this.dataSource = DataSource;\n    this.dateService = DateService;\n  }\n\n  getAll() {\n    var products = this._readProductsFromSource();\n    //recalculates daysLeft property for each item\n    products.forEach((element) => {\n      element.daysLeft = this._calculateDaysLeft(\n        element.createdAt,\n        element.coolingPeriod\n      );\n    });\n    return products;\n  }\n\n  getOne(id) {\n    return this._readProductsFromSource().find((product) => product.id === id);\n  }\n\n  update(productId, productChanges) {\n    const product = this.getOne(productId);\n    const updatedProduct = {\n      ...product,\n      ...productChanges,\n      questions: { ...product.questions, ...productChanges.questions },\n    };\n    this._writeProductToSource(productId, updatedProduct);\n  }\n\n  increaseLikeCount(productId) {\n    const product = this.getOne(productId);\n    const updatedProduct = {\n      ...product,\n      likeCount: product.likeCount !== undefined ? product.likeCount + 1 : 0,\n    };\n    this._writeProductToSource(productId, updatedProduct);\n  }\n\n  create(product) {\n    //init data for new product\n    product.likeCount = 0;\n    product.createdAt = new Date().toISOString();\n    product.daysLeft = product.coolingPeriod;\n\n    this._writeProductToSource(null, product);\n  }\n\n  remove(productId) {\n    this._writeProductToSource(productId, null);\n  }\n\n  _readProductsFromSource() {\n    return this.dataSource.read(\"products\");\n  }\n\n  _writeProductToSource(id, product) {\n    const result = this.dataSource.write(\"products\", product, id);\n    return result;\n  }\n\n  //createdAt: string in ISO format\n  _calculateDaysLeft = (createdAt, coolingPeriod) => {\n    let nowMs = this.dateService.getCurrent().getTime();\n    let createdAtMs = Date.parse(createdAt);\n    let coolingDeadline =\n      createdAtMs + coolingPeriod * this.dateService.msInDay();\n    let diffDays = (coolingDeadline - nowMs) / this.dateService.msInDay();\n    //if difference is larger than 1 day i.e. cooling period hasn't lapsed yet - find value in days\n    return diffDays > 1 ? Math.floor(diffDays) : 0;\n  };\n}\n\nexport { Products, LocalStorageSource, TestSource };\n","class DateService {\n  //get current date object\n  getCurrent() {\n    return new Date();\n  }\n\n  //miliseconds in a day\n  msInDay() {\n    return 86400000;\n  }\n}\n\nexport default DateService;\n","import { useState } from \"react\";\nimport { isMobile } from \"react-device-detect\";\n\nconst lastPromptedAt = \"appInstallLastPromptedAt\";\nconst daysToWaitBeforePrompt = 1;\n\nconst useAppInstallPrompt = () => {\n  const [\n    userShouldBePromptedToInstall,\n    setUserShouldBePromptedToInstall,\n  ] = useState(getUserShouldBePromptedToInstall());\n\n  const handleUserSeeingInstallPrompt = () => {\n    setUserShouldBePromptedToInstall(false);\n    localStorage.setItem(lastPromptedAt, new Date().toISOString());\n  };\n\n  return [\n    isMobile && userShouldBePromptedToInstall,\n    handleUserSeeingInstallPrompt,\n  ];\n};\n\nfunction getUserShouldBePromptedToInstall() {\n  //app installed\n  if (navigator.standalone) {\n    return false;\n  }\n  const lastPrompt = localStorage.getItem(lastPromptedAt);\n  //never prompted\n  if (!lastPrompt) {\n    return true;\n  }\n  const daysSinceLastPrompt = (new Date() - Date.parse(lastPrompt)) / 86400000;\n  return (\n    isNaN(daysSinceLastPrompt) || daysSinceLastPrompt > daysToWaitBeforePrompt\n  );\n}\n\nexport default useAppInstallPrompt;\n","export default __webpack_public_path__ + \"static/media/pwa.87f7645c.ico\";","import React from \"react\";\nimport { Button, Modal, Card } from \"react-bootstrap\";\nimport useAppInstallPrompt from \"./useAppInstallPrompt\";\nimport PwaIcon from \"./pwa.ico\";\n\nexport const PwaPrompt = () => {\n  const [appInstallPrompt, onPromptClick] = useAppInstallPrompt();\n\n  if (!appInstallPrompt) {\n    return null;\n  }\n  return (\n    <Modal show={true}>\n      <Modal.Header>\n        <img\n          className=\"mx-auto\"\n          style={{\n            borderTopRightRadius: \"50%\",\n            borderTopLeftRadius: \"50%\",\n          }}\n          width=\"40rem\"\n          src={PwaIcon}\n          alt=\"Icon\"\n        />\n      </Modal.Header>\n      <Modal.Body>\n        <Card.Text className=\"text-center\">\n          Open browser settings and tap &quot;Add to Home Screen&quot; to\n          install the app\n        </Card.Text>\n        <div className=\"d-flex justify-content-center\">\n          <Button onClick={onPromptClick}>Close</Button>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n","import React from \"react\";\nimport { Card, Col, Row, Button } from \"react-bootstrap\";\n\nfunction StaticHeader(props) {\n  const { title, onBackButtonClick } = props;\n  return (\n    <Card className=\"my-2\">\n      <Card.Title className=\"text-center\">\n        <Row className=\"p-1\">\n          <Col xs={{ span: 2 }} style={{ fontSize: \"2em\" }}>\n            {onBackButtonClick && (\n              <Button\n                variant=\"outline-dark\"\n                size=\"lg\"\n                onClick={onBackButtonClick}\n              >\n                <i className=\"fas fa-chevron-left align-center\"></i>\n              </Button>\n            )}\n          </Col>\n          <Col xs={{ span: 8 }}>Buyer's regret</Col>\n          <Col xs={{ span: 2 }} style={{ fontSize: \"2em\" }}>\n            <i className=\"far fa-user-circle align-middle\"></i>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={{ span: 2 }}></Col>\n          <Col sm={{ span: 8 }}>{title}</Col>\n          <Col sm={{ span: 2 }}></Col>\n        </Row>\n      </Card.Title>\n    </Card>\n  );\n}\n\nexport default StaticHeader;\n","import { useState } from \"react\";\n\nimport PageSelection from \"./Components/PageSelection/PageSelection.js\";\nimport { Products, LocalStorageSource, TestSource } from \"./Products\";\nimport DateService from \"./Utils/DateService\";\nimport { PwaPrompt } from \"./Components/PwaPrompt\";\nimport StaticHeader from \"./Components/StaticHeader\";\n\nimport { Container, Alert } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst products =\n  process.env.NODE_ENV !== \"test\"\n    ? new Products(LocalStorageSource, new DateService())\n    : new Products(TestSource.initialize(), new DateService());\nfunction App() {\n  const [staticHeader, setStaticHeader] = useState({\n    title: \"\",\n    onBackButtonClick: null,\n  });\n  const [allProducts, setAllProducts] = useState(products.getAll());\n  const [currentProduct, setCurrentProduct] = useState(null);\n  const [showForgetAlert, setShowForgetAlert] = useState(false);\n\n  const createProduct = (product) => {\n    products.create.bind(products)(product);\n    setAllProducts(products.getAll());\n  };\n  const updateProduct = (productId, product) => {\n    products.update.bind(products)(productId, product);\n    setAllProducts(products.getAll());\n  };\n  const removeProduct = (product) => {\n    products.remove.bind(products)(product.id);\n    setAllProducts(products.getAll());\n    setShowForgetAlert(true);\n    setTimeout(() => {\n      setShowForgetAlert(false);\n    }, 2000);\n  };\n  const increaseLikeCount = (productId) => {\n    products.increaseLikeCount.bind(products)(productId);\n    setAllProducts(products.getAll());\n  };\n\n  return (\n    <Container>\n      <PwaPrompt />\n      <StaticHeader\n        title={staticHeader.title}\n        onBackButtonClick={staticHeader.onBackButtonClick}\n      />\n      <PageSelection\n        pages={App.pages}\n        allProducts={allProducts}\n        createProduct={createProduct}\n        removeProduct={removeProduct}\n        updateProduct={updateProduct}\n        increaseLikeCount={increaseLikeCount}\n        setCurrentProduct={setCurrentProduct}\n        currentProduct={currentProduct}\n        setStaticHeader={setStaticHeader}\n      />\n      <Alert show={showForgetAlert} variant=\"success\" className=\"my-1\">\n        <p>The product has been removed from the list. Good job!</p>\n      </Alert>\n    </Container>\n  );\n}\n\nApp.pages = { HOME: \"HOME\", EDIT_PRODUCT: \"EDIT_PRODUCT\" };\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}