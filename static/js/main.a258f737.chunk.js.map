{"version":3,"sources":["Components/PageSelection/Pages.js","Components/Home/ListItem.js","Components/Home/ProductList.js","Components/Home/index.js","Components/EditProduct/useForm.js","Components/EditProduct/index.js","Components/PageSelection/PageSelection.js","Products/sources/TestSource.js","Products/index.js","App.js","reportWebVitals.js","index.js"],"names":["Pages","HOME","EDIT_PRODUCT","ListItem","props","product","id","name","daysLeft","likeCount","Card","className","Title","Row","Col","Button","variant","onClick","changePage","style","paddingLeft","paddingRight","Badge","ProductList","sm","span","fontSize","allProducts","map","Home","useForm","existingProduct","initProduct","linkToBuy","reasonToBuy","reminderPeriod","coolingPeriod","useState","setValues","handleChange","event","target","value","handleReset","EditProduct","resetAndGoHome","Fragment","xs","size","Form","onSubmit","e","preventDefault","updateProduct","createProduct","Group","Label","htmlFor","Control","onChange","placeholder","required","as","rows","type","min","max","maxWidth","lg","aligned","PageSelection","selectedPage","setSelectedPage","TestSource","read","testData","Products","DataSource","this","dataSource","_readProductsFromSource","productId","productChanges","products","App","getAll","create","bind","update","Container","pages","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a258f737.chunk.js","sourcesContent":["// list of pages in the app. \n// Use to switch pages from another component by importing \nconst Pages = {HOME: \"Home\", EDIT_PRODUCT: \"EDIT_PRODUCT\"}\n\nexport default Pages","import React from 'react'\nimport { Card, Col, Row, Button, Badge } from 'react-bootstrap'\nimport Pages from '../PageSelection/Pages'\n\nfunction ListItem(props) {\n    const { id, name, daysLeft, likeCount } = props.product;\n\n    const handleEditClick = () => {\n        props.changePage(Pages.EDIT_PRODUCT)\n    }\n\n    \n    return (\n        <Card className=\"p-3\" id={id}>\n             <Card.Title>{name}</Card.Title>\n             <Row>\n                <Col>\n                    {daysLeft === 0 ?  \n                        <Button variant=\"outline-dark\" className=\"px-3\"><i className=\"fas fa-shopping-cart\"></i> Buy</Button>: \n                        <span><i className=\"far fa-clock\"></i> {daysLeft} days left</span>}\n                </Col>\n                <Col className=\"text-right\">\n                    <Button variant=\"outline-dark\" onClick={handleEditClick}><i className=\"fas fa-pen\" ></i></Button>\n                    <Button variant=\"outline-dark\" style={{paddingLeft:'0.55em', paddingRight:'0.2em'}}>\n                        <i className=\"fas fa-thumbs-up\"></i>\n                        <sup><Badge variant=\"light\">{likeCount}</Badge></sup>\n                    </Button>\n                    <Button variant=\"outline-dark\"><i className=\"fas fa-trash-alt\" ></i></Button>\n                </Col>\n            </Row>\n        </Card>        \n    )\n}\n\nexport default ListItem\n","import React from 'react'\nimport ListItem from './ListItem'\nimport Pages from '../PageSelection/Pages'\nimport { Card, Col, Row, Button } from 'react-bootstrap'\n\nfunction ProductList(props) {\n\n    const handleAddClick = () => {\n        props.changePage(Pages.EDIT_PRODUCT)\n    }\n\n    return (\n        <div>\n            <Card className='p-2'>\n                <Card.Title className=\"text-center\"> \n                    <Row>\n                        <Col sm={{span:2}}></Col>\n                        <Col sm={{span:8}}>\n                            Buyer's regret\n                        </Col>\n                         <Col sm={{span:2}} style={{fontSize:\"2em\"}}><i className=\"far fa-user-circle align-middle\"></i></Col> \n                    </Row>\n                    <Row>\n                    <Col sm={{span:2}}></Col>\n                    <Col sm={{span:8}}>\n                            My wishlist\n                    </Col>\n                    <Col sm={{span:2}}></Col>\n                    </Row>\n                </Card.Title>\n            </Card>\n            {props.allProducts.map((product) => (\n                <ListItem key={product.id} product={product} changePage={props.changePage}/>\n            ))}\n            <Button variant=\"primary\" className=\"float-right my-3\" onClick={handleAddClick}>\n                <i className=\"fas fa-plus\" ></i>\n            </Button>\n        </div>\n    )\n}\n\nexport default ProductList\n","import React from \"react\";\nimport ProductList from './ProductList'\n\nconst Home = (props) => {\n  return (\n    <ProductList allProducts={props.allProducts} changePage={props.changePage}/>\n  );\n};\n\nexport default Home;\n","import { useState } from 'react'\r\n\r\nconst useForm = (existingProduct) => {\r\n\t//use a passed product to edit; if none is passed - construct a default one to create\r\n\tconst initProduct = existingProduct ? existingProduct :  {\r\n\t\tname: \"\",\r\n\t\tlinkToBuy: \"\",\r\n\t\treasonToBuy: \"\",\r\n\t\treminderPeriod: 7,\r\n\t\tcoolingPeriod: 30,\r\n\t};\r\n\r\n\tconst [product, setValues] = useState(initProduct)\r\n\tconst handleChange = (event) => {\r\n\t\tconst { name, value } = event.target\r\n\t\tsetValues({...product, [name]: value})\r\n\t}\r\n\tconst handleReset = () =>{\r\n\t\tsetValues({...initProduct})\r\n\t}\r\n\r\n\treturn {handleChange, handleReset, product}\r\n}\r\n\r\nexport default useForm\r\n","import React from \"react\"\nimport useForm from './useForm'\nimport Pages from '../PageSelection/Pages'\nimport { Col, Row, Card, Button, Form } from 'react-bootstrap'\n\nconst EditProduct = (props) => {\n\tconst { handleChange, handleReset, product } = useForm(props.product);\n\tconst handleSubmit = (e) =>{\n\t\te.preventDefault();\n\t\tif(product.id){\n\t\t\tprops.updateProduct(product.id, product)\n\t\t}\n\t\telse{\n\t\t\tprops.createProduct(product)\n\t\t}\n        props.changePage(Pages.HOME);\n\t}\n\n    const resetAndGoHome = () =>{\n        handleReset();\n        props.changePage(Pages.HOME);\n    }\n\n\treturn(\n\t\t<React.Fragment>\n\t\t\t<Card className=\"my-2\">\n\t\t\t\t<Card.Title className='text-center'>\n\t\t\t\t\t<Row className=\"p-1\">\n\t\t                 <Col xs={{span:2}} style={{fontSize:\"2em\"}}>\n\t\t                  \t<Button variant=\"outline-dark\" size=\"lg\" onClick={resetAndGoHome}>\n\t\t\t\t\t\t\t\t<i className=\"fas fa-chevron-left align-center\"></i>\n\t\t\t\t\t\t\t</Button>\n\t\t                 </Col>\n\t\t                 <Col xs={{span:8}}>\n\t\t                        Buyer's regret\n\t\t                 </Col>\n\t\t                    <Col xs={{span:2}} style={{fontSize:\"2em\"}}>\n\t\t                   \t<i className=\"far fa-user-circle align-middle\"></i>\n\t\t                 </Col> \n\t\t            </Row>\n\t\t            <Row>\n\t\t                <Col sm={{span:2}}></Col>\n\t\t                <Col sm={{span:8}}>\n\t\t                        Product Details\n\t\t                </Col>\n\t\t                <Col sm={{span:2}}></Col>\n\t\t            </Row>\n\t\t\t\t</Card.Title>\n\t\t\t</Card>\n\t\t\t<Form className=\"product-form\" onSubmit={handleSubmit}>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"name\">Product name:</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={product.name}\n\t\t\t\t\t\tplaceholder=\"Product name ...\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tid=\"name\" \n\t\t\t\t\t\trequired/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"linkToBuy\">Link to buy:</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={product.linkToBuy}\n\t\t\t\t\t\tplaceholder=\"Link to a website ...\"\n\t\t\t\t\t\tname=\"linkToBuy\" \n\t\t\t\t\t\tid=\"linkToBuy\" \n\t\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"reasonToBuy\">Why would you like to buy this product?</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={product.reasonToBuy}\n\t\t\t\t\t\tplaceholder=\"Reason to buy ...\"\n\t\t\t\t\t\tname=\"reasonToBuy\"\n\t\t\t\t\t\tid=\"reasonToBuy\"\n\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\trows=\"3\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\t />\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Row>\n\t\t\t\t<Form.Group as={Col} xs=\"auto\">\n\t\t\t\t\t<Form.Label htmlFor=\"reminderPeriod\">How long should I wait before I remind you about this product?</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={product.reminderPeriod}\n\t\t\t\t\t\tplaceholder=\"Days ...\"\n\t\t\t\t\t\tname=\"reminderPeriod\"\n\t\t\t\t\t\tid=\"reminderPeriod\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\tmax=\"30\"\t\t\t\n\t\t\t\t\t\tstyle={{maxWidth:\"5rem\"}}\t\t\t\n\t\t\t\t\t\t />\n\t\t\t\t</Form.Group>\n\t\t\t\t<Col lg=\"2\"></Col>\n\t\t\t\t<Form.Group as={Col} xs=\"auto\">\n\t\t\t\t\t<Form.Label htmlFor=\"coolingPeriod\">How long should I lock the buy button?</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={product.coolingPeriod}\n\t\t\t\t\t\tplaceholder=\"Days ...\"\n\t\t\t\t\t\tname=\"coolingPeriod\"\n\t\t\t\t\t\tid=\"coolingPeriod\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\tmax=\"90\"\n\t\t\t\t\t\tstyle={{maxWidth:\"5rem\"}}\t\n\t\t\t\t\t\t />\n\t\t\t\t</Form.Group>\n\t\t\t\t</Form.Row>\n\t\t\t\t<Form.Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<Button variant=\"outline-danger\" aligned=\"left aligned\" size=\"lg\" onClick={resetAndGoHome}>\n\t\t\t\t\t\t<i className=\"fas fa-times-circle\"></i>\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t\t<Col xs=\"auto\">\n\t\t\t\t\t<Button variant=\"outline-success\" aligned=\"right aligned\" type=\"submit\" size=\"lg\">\n\t\t\t\t\t\t<i className=\"fas fa-check\"></i>\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t\t</Form.Row>\t\t\n\t\t\t</Form>\t\t\n\t\t</React.Fragment>\n\t);\n};\n\nexport default EditProduct; ","import { useState } from 'react'\nimport { Fragment } from 'react';\nimport Home from '../Home'\nimport EditProduct from '../EditProduct'\n//list of pages in the app\nimport Pages from './Pages'\n\n\n// Componet used to track the currently selected page and switch between pages.\n// To change to a new page from another component import 'Pages' as above and\n// pass setSelectedPage method down the tree to your component.\n// Call setSelectedPage(Pages.<new_page>) to change to the new_page page.\nconst PageSelection = (props) => {\n    const [selectedPage, setSelectedPage] = useState(Pages.HOME)\n\n    return (\n        <Fragment>\n            {selectedPage === Pages.HOME && <Home allProducts={props.allProducts} changePage={setSelectedPage} /> }\n            {selectedPage === Pages.EDIT_PRODUCT && <EditProduct changePage={setSelectedPage} createProduct={props.createProduct} updateProduct={props.updateProduct}/> }\n        </Fragment>\n    )\n}\n\nexport default PageSelection\n","import testData from './test-data.json';\n\nconst TestSource = {\n  read(name) {\n    return testData[name];\n  }\n}\n\nexport default TestSource;\n","import TestSource from './sources/TestSource';\n\nclass Products {\n  constructor(DataSource) {\n    this.dataSource = DataSource;\n  }\n\n  getAll() {\n    return this._readProductsFromSource();\n  }\n\n  update(productId, productChanges) {\n\n  }\n\n  create(product) {\n\n  }\n\n  remove(productId) {\n\n  }\n\n  _readProductsFromSource() {\n    return this.dataSource.read('products');\n  }\n}\n\nexport { Products, TestSource };\n","//import { useState } from \"react\";\n\nimport PageSelection from \"./Components/PageSelection/PageSelection.js\";\nimport { Products, TestSource } from \"./Products\";\n\nimport Container from \"react-bootstrap/Container\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst products = new Products(TestSource);\n\nfunction App() {\n  const allProducts = products.getAll();\n  const createProduct = products.create.bind(products);\n  const updateProduct = products.update.bind(products);\n  return (\n    <Container>\n      <header>\n        <PageSelection\n          pages={App.pages}\n          allProducts={allProducts}\n          createProduct={createProduct}\n          updateProduct={updateProduct}\n        />\n      </header>\n    </Container>\n  );\n}\n\nApp.pages = { HOME: \"HOME\", EDIT_PRODUCT: \"EDIT_PRODUCT\" };\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}