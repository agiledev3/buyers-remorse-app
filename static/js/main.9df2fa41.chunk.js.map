{"version":3,"sources":["Components/Home/ListItem.js","Components/Home/ProductList.js","Components/Home/index.js","Products/sources/TestSource.js","Products/index.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","prop","product","name","daysLeft","likeCount","Card","className","Title","Row","Col","Button","variant","style","paddingLeft","paddingRight","Badge","ProductList","props","sm","span","fontSize","allProducts","map","id","Home","TestSource","read","testData","Products","DataSource","this","dataSource","_readProductsFromSource","productId","productChanges","products","App","useState","pages","HOME","activePage","setActivePage","getAll","Container","changePage","EDIT_PRODUCT","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9df2fa41.chunk.js","sourcesContent":["import React from 'react'\nimport { Card, Col, Row, Button, Badge } from 'react-bootstrap'\n\nfunction ListItem(prop) {\n    const { name, daysLeft, likeCount } = prop.product;\n\n    return (\n        <Card className=\"p-3\">\n             <Card.Title>{name}</Card.Title>\n             <Row>\n                <Col>\n                    {daysLeft === 0 ?  \n                        <Button variant=\"outline-dark\" className=\"px-3\"><i className=\"fas fa-shopping-cart\"></i> Buy</Button>: \n                        <span><i className=\"far fa-clock\"></i> {daysLeft} days left</span>}\n                </Col>\n                <Col className=\"text-right\">\n                    <Button variant=\"outline-dark\"><i className=\"fas fa-pen\" ></i></Button>\n                    <Button variant=\"outline-dark\" style={{paddingLeft:'0.55em', paddingRight:'0.2em'}}>\n                        <i className=\"fas fa-thumbs-up\"></i>\n                        <sup><Badge variant=\"light\">{likeCount}</Badge></sup>\n                    </Button>\n                    <Button variant=\"outline-dark\"><i className=\"fas fa-trash-alt\" ></i></Button>\n                </Col>\n            </Row>\n        </Card>        \n    )\n}\n\nexport default ListItem\n","import React from 'react'\nimport ListItem from './ListItem'\nimport { Card, Col, Row, Button } from 'react-bootstrap'\n\nfunction ProductList(props) {\n    return (\n        <div>\n            <Card className='p-2'>\n                <Card.Title className=\"text-center\"> \n                    <Row>\n                        <Col sm={{span:2}}></Col>\n                        <Col sm={{span:8}}>\n                            Buyer's regret\n                        </Col>\n                         <Col sm={{span:2}} style={{fontSize:\"2em\"}}><i className=\"far fa-user-circle align-middle\"></i></Col> \n                    </Row>\n                    <Row>\n                    <Col sm={{span:2}}></Col>\n                    <Col sm={{span:8}}>\n                            My wishlist\n                    </Col>\n                    <Col sm={{span:2}}></Col>\n                    </Row>\n                </Card.Title>\n            </Card>\n            {props.allProducts.map((product) => (\n                <ListItem key={product.id} product={product}/>\n            ))}\n            <Button variant=\"primary\" className=\"float-right my-3\"><i className=\"fas fa-plus\" ></i></Button>\n        </div>\n    )\n}\n\nexport default ProductList\n","import React from \"react\";\nimport ProductList from './ProductList'\n\nconst Home = (props) => {\n  return (\n    <ProductList allProducts={props.allProducts}/>\n  );\n};\n\nexport default Home;\n","import testData from './test-data.json';\n\nconst TestSource = {\n  read(name) {\n    return testData[name];\n  }\n}\n\nexport default TestSource;\n","import TestSource from './sources/TestSource';\n\nclass Products {\n  constructor(DataSource) {\n    this.dataSource = DataSource;\n  }\n\n  getAll() {\n    return this._readProductsFromSource();\n  }\n\n  update(productId, productChanges) {\n\n  }\n\n  create(product) {\n\n  }\n\n  remove(productId) {\n\n  }\n\n  _readProductsFromSource() {\n    return this.dataSource.read('products');\n  }\n}\n\nexport { Products, TestSource };\n","import { useState } from \"react\";\n\nimport Home from \"./Components/Home\";\nimport { Products, TestSource } from \"./Products\";\n\nimport Container from 'react-bootstrap/Container'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst products = new Products(TestSource);\n\nfunction App() {\n  const [activePage, setActivePage] = useState(App.pages.HOME);\n  const allProducts = products.getAll();\n  return (\n    <Container>\n      <header>\n        {activePage === App.pages.HOME && (\n          <Home allProducts={allProducts} changePage={setActivePage} />\n        )}\n      </header>\n    </Container>\n  );\n}\n\nApp.pages = { HOME: \"HOME\", EDIT_PRODUCT: \"EDIT_PRODUCT\" };\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}